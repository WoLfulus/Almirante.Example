<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Almirante.Engine</name>
    </assembly>
    <members>
        <member name="T:Almirante.Engine.Audio.AudioManager">
            <summary>
            Audio management class.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Audio.AudioManager.MaxSounds">
            <summary>
            Max concurrent sounds.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Audio.AudioManager.songs">
            <summary>
            Song instances.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Audio.AudioManager.sounds">
            <summary>
            Effect instances.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Audio.AudioManager.playingSounds">
            <summary>
            Current sounds.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Audio.AudioManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Audio.AudioManager"/> class.
            </summary>
        </member>
        <member name="T:Almirante.Engine.CameraManager">
            <summary>
            Camera class.
            </summary>
        </member>
        <member name="F:Almirante.Engine.CameraManager.TwoPi">
            <summary>
            The two PI value.
            </summary>
        </member>
        <member name="F:Almirante.Engine.CameraManager.transformation">
            <summary>
            The transformation
            </summary>
        </member>
        <member name="F:Almirante.Engine.CameraManager.origin">
            <summary>
            The origin
            </summary>
        </member>
        <member name="F:Almirante.Engine.CameraManager.matrixOrigin">
            <summary>
            The matrix origin
            </summary>
        </member>
        <member name="F:Almirante.Engine.CameraManager.position">
            <summary>
            The position
            </summary>
        </member>
        <member name="F:Almirante.Engine.CameraManager.matrixPosition">
            <summary>
            The matrix position
            </summary>
        </member>
        <member name="F:Almirante.Engine.CameraManager.rotation">
            <summary>
            The rotation
            </summary>
        </member>
        <member name="F:Almirante.Engine.CameraManager.rotationRadians">
            <summary>
            The rotation radians
            </summary>
        </member>
        <member name="F:Almirante.Engine.CameraManager.matrixRotation">
            <summary>
            The matrix rotation
            </summary>
        </member>
        <member name="F:Almirante.Engine.CameraManager.zoom">
            <summary>
            The zoom
            </summary>
        </member>
        <member name="F:Almirante.Engine.CameraManager.matrixZoom">
            <summary>
            The zoom matrix scale
            </summary>
        </member>
        <member name="M:Almirante.Engine.CameraManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="!:Camera"/> class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.CameraManager.UpdateOrigin(System.Int32,System.Int32)">
            <summary>
            Updates the origin.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Almirante.Engine.CameraManager.Initialize">
            <summary>
            Initializes the camera.
            </summary>
        </member>
        <member name="M:Almirante.Engine.CameraManager.UpdateTransformation">
            <summary>
            Updates the camera's transformation matrix.
            </summary>
        </member>
        <member name="P:Almirante.Engine.CameraManager.Matrix">
            <summary>
            Gets the transformation.
            </summary>
            <value>
            The transformation.
            </value>
        </member>
        <member name="P:Almirante.Engine.CameraManager.Position">
            <summary>
            Gets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:Almirante.Engine.CameraManager.Rotation">
            <summary>
            Gets or sets the rotation in degrees.
            </summary>
            <value>
            The rotation.
            </value>
        </member>
        <member name="P:Almirante.Engine.CameraManager.Zoom">
            <summary>
            Gets or sets the zoom.
            </summary>
            <value>
            The zoom.
            </value>
        </member>
        <member name="T:Almirante.Engine.Core.AlmiranteEngine">
            <summary>
            Game application class.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.AlmiranteEngine.windows">
            <summary>
            The windows
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.AlmiranteEngine.initialized">
            <summary>
            The initialized
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.AlmiranteEngine.arguments">
            <summary>
            Stores a list of arguments passed to the command-line.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.AlmiranteEngine.services">
            <summary>
            The services
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.AlmiranteEngine.Start(System.String[])">
            <summary>
            Starts the engine.
            </summary>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:Almirante.Engine.Core.AlmiranteEngine.StartWindows">
            <summary>
            Starts the engine for winforms.
            </summary>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:Almirante.Engine.Core.AlmiranteEngine.Stop">
            <summary>
            Exits the game.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.AlmiranteEngine.InitializeExports">
            <summary>
            Initializes the exported types.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.AlmiranteEngine.ProcessAssembly(System.Reflection.Assembly)">
            <summary>
            Register scenes from the assemblies.
            </summary>
            <param name="engine">The engine.</param>
            <param name="assembly">The assembly.</param>
            <exception cref="T:System.Exception">You cannot have more than one startup class.</exception>
        </member>
        <member name="M:Almirante.Engine.Core.AlmiranteEngine.InitializeServices(Microsoft.Xna.Framework.GameServiceContainer)">
            <summary>
            Initializes the services.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.AlmiranteEngine.InitializeWindowsServices">
            <summary>
            Initializes the windows services.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.AlmiranteEngine.#ctor(System.String[])">
            <summary>
            Creates a new instance of the <see cref="T:Almirante.Engine.Core.AlmiranteEngine"/> class.
            <param name="arguments">Arguments.</param>
            </summary>
            <param name="windows">if set to <c>true</c> WinForms will be used.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:Almirante.Engine.Core.AlmiranteEngine.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Almirante.Engine.Core.AlmiranteEngine"/> class.
            <param name="arguments">Arguments.</param>
            </summary>
            <param name="windows">if set to <c>true</c> WinForms will be used.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="P:Almirante.Engine.Core.AlmiranteEngine.IsWinForms">
            <summary>
            Gets a value indicating whether the engine is running on winforms.
            </summary>
            <value>
              <c>true</c> if [win forms]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.AlmiranteEngine.Instance">
            <summary>
            Gets the instance to the game engine.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.AlmiranteEngine.Application">
            <summary>
            Gets or sets the application.
            </summary>
            <value>
            The application.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.AlmiranteEngine.Services">
            <summary>
            Gets the services.
            </summary>
            <value>
            The services.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.AlmiranteEngine.Audio">
            <summary>
            Gets the sprite batch instance.
            </summary>
            <value>
            The audio.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.AlmiranteEngine.Camera">
            <summary>
            Gets the camera instance.
            </summary>
            <value>
            The camera.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.AlmiranteEngine.Bootstrap">
            <summary>
            Gets or sets the configurator.
            </summary>
            <value>
            The configurator instance.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.AlmiranteEngine.Batch">
            <summary>
            Gets the sprite batch instance.
            </summary>
            <value>
            The batch.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.AlmiranteEngine.Input">
            <summary>
            Gets the input manager.
            </summary>
            <value>
            The input.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.AlmiranteEngine.Resources">
            <summary>
            Gets the resource manager.
            </summary>
            <value>
            The resources.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.AlmiranteEngine.Scenes">
            <summary>
            Gets the scene manager.
            </summary>
            <value>
            The scenes.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.AlmiranteEngine.Settings">
            <summary>
            Gets the engine settings.
            </summary>
            <value>
            The settings.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.AlmiranteEngine.Device">
            <summary>
            Gets the graphics device.
            </summary>
            <value>
            The device.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.AlmiranteEngine.Time">
            <summary>
            Gets the time manager.
            </summary>
            <value>
            The time.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.AlmiranteEngine.DeviceManager">
            <summary>
            Gets the graphics device manager.
            </summary>
            <value>
            The device manager.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.AlmiranteEngine.ResourceContents">
            <summary>
            Gets or sets the content manager.
            </summary>
            <value>
            The resource contents.
            </value>
        </member>
        <member name="T:Almirante.Engine.Core.GameApplication">
            <summary>
            Main game application class.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.GameApplication.arguments">
            <summary>
            The arguments
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.GameApplication.#ctor(System.String[])">
            <summary>
            Creates a new instance of the <see cref="T:Almirante.Engine.Core.AlmiranteEngine"/> class.
            <param name="arguments">Arguments.</param>
            </summary>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:Almirante.Engine.Core.GameApplication.OnWindowResize(System.Object,System.EventArgs)">
            <summary>
            Called when user resizes the game window.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event parameters.</param>
        </member>
        <member name="M:Almirante.Engine.Core.GameApplication.Initialize">
            <summary>
            Performs all initialization routines.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.GameApplication.LoadContent">
            <summary>
            Performs all initial content loading.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.GameApplication.UnloadContent">
            <summary>
            Resource unloading.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.GameApplication.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Game logic update.
            </summary>
            <param name="gameTime">Game timing snapshot.</param>
        </member>
        <member name="M:Almirante.Engine.Core.GameApplication.Draw(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Game rendering.
            </summary>
            <param name="gameTime">Game timing snapshot.</param>
        </member>
        <member name="T:Almirante.Engine.Core.Resolution">
            <summary>
            Resolution management class.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Resolution.width">
            <summary>
            Current width.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Resolution.height">
            <summary>
            Current height.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Resolution.virtualWidth">
            <summary>
            Virtual width.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Resolution.virtualHeight">
            <summary>
            Virtual height.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Resolution.scaleMatrix">
            <summary>
            Scale matrix.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Resolution.fullscreen">
            <summary>
            Fullscreen.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Resolution.dirtyMatrix">
            <summary>
            Matrix is dirty.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Resolution.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Core.Resolution"/> class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Resolution.Initialize">
            <summary>
            Initializes the resoltuion manager.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Resolution.SetResolution(System.Int32,System.Int32)">
            <summary>
            Sets the resolution.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Almirante.Engine.Core.Resolution.SetResolution(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Sets the resolution.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="fullscreen">if set to <c>true</c> [fullscreen].</param>
        </member>
        <member name="M:Almirante.Engine.Core.Resolution.SetBaseResolution(System.Int32,System.Int32)">
            <summary>
            Sets the virtual resolution.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Almirante.Engine.Core.Resolution.ApplyChanges">
            <summary>
            Applies the changes.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Resolution.RecreateScaleMatrix">
            <summary>
            Recreates the scale matrix.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Resolution.GetVirtualAspectRatio">
            <summary>
            Get virtual Mode Aspect Ratio
            </summary>
            <returns>aspect ratio</returns>
        </member>
        <member name="M:Almirante.Engine.Core.Resolution.ApplyTotalViewport">
            <summary>
            Fulls the viewport.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Resolution.ApplyScaledViewport">
            <summary>
            Resets the viewport.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.Resolution.BaseWidth">
            <summary>
            Gets the window width.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.Resolution.BaseHeight">
            <summary>
            Gets the window height.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.Resolution.RealWidth">
            <summary>
            Gets the window width.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.Resolution.RealHeight">
            <summary>
            Gets the window height.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.Resolution.Fullscreen">
            <summary>
            Gets a value indicating whether this <see cref="T:Almirante.Engine.Core.Resolution"/> is fullscreen.
            </summary>
            <value>
              <c>true</c> if fullscreen; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.Resolution.Resizable">
            <summary>
            Gets or sets the window title string.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.Resolution.Matrix">
            <summary>
            Gets the transformation matrix.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.Resolution.ViewportSize">
            <summary>
            Gets the resolution viewport.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Core.Windows.AlmiranteControl`1">
            <summary>
            Custom control to use Scenes inside a WinForms project.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Windows.AlmiranteControl`1.stopWatch">
            <summary>
            The stop watch
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Windows.AlmiranteControl`1.TargetElapsedTime">
            <summary>
            The target elapsed time
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Windows.AlmiranteControl`1.MaxElapsedTime">
            <summary>
            The max elapsed time
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Windows.AlmiranteControl`1.accumulatedTime">
            <summary>
            The total game time
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Windows.AlmiranteControl`1.lastTime">
            <summary>
            The elapsed game time
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Windows.AlmiranteControl`1.graphicsDeviceService">
            <summary>
            The graphics device service
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Windows.AlmiranteControl`1.scene">
            <summary>
            The scene instance.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Core.Windows.AlmiranteControl`1"/> class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.OnCreateControl">
            <summary>
            Initializes the control.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.Dispose(System.Boolean)">
            <summary>
            Disposes the control.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Redraws the control in response to a WinForms paint message.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.BeginDraw">
            <summary>
            Begins drawing the control contents.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.EndDraw">
            <summary>
            Presents the content to the screen.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.HandleDeviceReset">
            <summary>
            Checks the device status and resets it if necessary.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.PaintUsingSystemDrawing(System.Drawing.Graphics,System.String)">
            <summary>
            Renders an error message to the form using GDI.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Ignores original winforms messages.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.OnInitialize">
            <summary>
            Derived classes override this to initialize their drawing code.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.OnTick(System.Object,System.EventArgs)">
            <summary>
            Ticks the specified sender.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.OnUninitialize">
            <summary>
            Uninitializes this instance.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Windows.AlmiranteControl`1.gameTime">
            <summary>
            The game time
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.OnUpdate">
            <summary>
            Called when [timer].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteControl`1.OnDraw">
            <summary>
            Derived classes override this to draw themselves using the GraphicsDevice.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.Windows.AlmiranteControl`1.Scene">
            <summary>
            Gets the scene.
            </summary>
            <value>
            The scene.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.Windows.AlmiranteControl`1.GraphicsDevice">
            <summary>
            Gets a GraphicsDevice that can be used to draw onto this control.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Core.Windows.AlmiranteGraphicsService">
            <summary>
            Helper class responsible for creating and managing the GraphicsDevice.
            All AlmiranteControl instances share the same WindowsGraphicsDevice,
            so even though there can be many controls, there will only ever be a single
            underlying GraphicsDevice. This implements the standard IGraphicsDeviceService
            interface, which provides notification events for when the device is reset
            or disposed.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.referenceCount">
            <summary>
            The reference count
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.singletonInstance">
            <summary>
            The singleton instance
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.graphicsDevice">
            <summary>
            The graphics device
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.parameters">
            <summary>
            The parameters
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.#ctor(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the WindowsGraphicsDevice class.
            Constructor is private, because this is a singleton class:
            client controls should use the public AddRef method instead.
            </summary>
            <param name="windowHandle">The window handle.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.AddRef(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Gets a reference to the singleton instance.
            </summary>
            <param name="windowHandle">The window handle.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.Release(System.Boolean)">
            <summary>
            Releases a reference to the singleton instance.
            </summary>
            <param name="disposing">if set to <c>true</c> [disposing].</param>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.ResetDevice(System.Int32,System.Int32)">
            <summary>
            Resets the graphics device to whichever is bigger out of the specified
            resolution or its current size. This behavior means the device will
            demand-grow to the largest of all its AlmiranteControl clients.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="F:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.disposed">
            <summary>
            The disposed
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.DeviceCreated">
            <summary>
            Occurs when [device created].
            </summary>
        </member>
        <member name="E:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.DeviceDisposing">
            <summary>
            Occurs when [device disposing].
            </summary>
        </member>
        <member name="E:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.DeviceReset">
            <summary>
            Occurs when [device reset].
            </summary>
        </member>
        <member name="E:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.DeviceResetting">
            <summary>
            Occurs when [device resetting].
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.Microsoft#Xna#Framework#Graphics#IGraphicsDeviceService#GraphicsDevice">
            <summary>
            Retrieves a graphcs device.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.Windows.AlmiranteGraphicsService.GraphicsDevice">
            <summary>
            Gets the current graphics device.
            </summary>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.BatchExtensions">
             <summary>
            
             </summary>
            <summary>
            SpriteBatch extension methods
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchExtensions.DrawFont(Microsoft.Xna.Framework.Graphics.SpriteBatch,Almirante.Engine.Fonts.BitmapFont,Microsoft.Xna.Framework.Vector2,System.String,System.Object[])">
            <summary>
            OnDraw text on scene using default alignment (Left)
            </summary>
            <param name="batch">The batch.</param>
            <param name="font">The font.</param>
            <param name="position">Position to begin drawing</param>
            <param name="input">A formated string</param>
            <param name="args">Optional parameters for the formated string</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchExtensions.DrawFont(Microsoft.Xna.Framework.Graphics.SpriteBatch,Almirante.Engine.Fonts.BitmapFont,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.String,System.Object[])">
            <summary>
            OnDraw text on scene using default orientation (Left)
            </summary>
            <param name="batch">The batch.</param>
            <param name="font">The font.</param>
            <param name="position">Position to begin drawing</param>
            <param name="color">The color.</param>
            <param name="input">A formated string</param>
            <param name="args">Optional parameters for the formated string</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchExtensions.DrawFont(Microsoft.Xna.Framework.Graphics.SpriteBatch,Almirante.Engine.Fonts.BitmapFont,Microsoft.Xna.Framework.Vector2,Almirante.Engine.Fonts.BitmapFontAlignment,Microsoft.Xna.Framework.Color,System.String,System.Object[])">
            <summary>
            OnDraw text on scene
            </summary>
            <param name="batch">The batch.</param>
            <param name="font">The font.</param>
            <param name="position">Position to begin drawing</param>
            <param name="alignment">The alignment.</param>
            <param name="color">The color.</param>
            <param name="input">A formated string</param>
            <param name="args">Optional parameters for the formated string</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchExtensions.DrawFont(Microsoft.Xna.Framework.Graphics.SpriteBatch,Almirante.Engine.Fonts.BitmapFont,Microsoft.Xna.Framework.Vector2,Almirante.Engine.Fonts.BitmapFontAlignment,System.String,System.Object[])">
            <summary>
            OnDraw text on scene
            </summary>
            <param name="batch">The batch.</param>
            <param name="font">The font.</param>
            <param name="position">Position to begin drawing</param>
            <param name="alignment">The alignment.</param>
            <param name="input">A formated string</param>
            <param name="args">Optional parameters for the formated string</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchExtensions.DrawFont(Microsoft.Xna.Framework.Graphics.SpriteBatch,Almirante.Engine.Fonts.BitmapFont,Microsoft.Xna.Framework.Vector2,Almirante.Engine.Fonts.BitmapFontAlignment,Microsoft.Xna.Framework.Color,System.String)">
            <summary>
            OnDraw text on scene
            </summary>
            <param name="batch">The batch.</param>
            <param name="font">The font.</param>
            <param name="position">The position.</param>
            <param name="alignment">The alignment.</param>
            <param name="color">The color.</param>
            <param name="input">The input.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchExtensions.Start(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Boolean,Microsoft.Xna.Framework.Graphics.SpriteSortMode,Microsoft.Xna.Framework.Graphics.BlendState,Microsoft.Xna.Framework.Graphics.SamplerState,Microsoft.Xna.Framework.Graphics.DepthStencilState,Microsoft.Xna.Framework.Graphics.RasterizerState,Microsoft.Xna.Framework.Graphics.Effect,System.Nullable{Microsoft.Xna.Framework.Matrix})">
            <summary>
            Starts the specified batch.
            </summary>
            <param name="batch">The batch.</param>
            <param name="useCamera">if set to <c>true</c> camera matrix will be applied.</param>
            <param name="sortMode">The sort mode.</param>
            <param name="blendState">State of the blend.</param>
            <param name="samplerState">State of the sampler.</param>
            <param name="depthStencilState">State of the depth stencil.</param>
            <param name="rasterizerState">State of the rasterizer.</param>
            <param name="effect">The effect.</param>
            <param name="transform">The transformation matrix.</param>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.BatchPrimitives">
             <summary>
            
             </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.BatchPrimitives.m_arcCache">
            <summary>
            The m_arc cache
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.BatchPrimitives.m_circleCache">
            <summary>
            The m_circle cache
            </summary>
        </member>
        <member name="F:Microsoft.Xna.Framework.Graphics.BatchPrimitives.m_pixel">
            <summary>
            The m_pixel
            </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.LineIntersect(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Lines the intersect.
            </summary>
            <param name="line1a">The line1a.</param>
            <param name="line1b">The line1b.</param>
            <param name="line2a">The line2a.</param>
            <param name="line2b">The line2b.</param>
            <param name="intersectPoint">The intersect point.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.MidVector(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2@,Microsoft.Xna.Framework.Vector2@)">
            <summary>
            Mids the vector.
            </summary>
            <param name="line1a">The line1a.</param>
            <param name="line1b">The line1b.</param>
            <param name="line2a">The line2a.</param>
            <param name="line2b">The line2b.</param>
            <param name="pCenter">The p center.</param>
            <param name="dCenter">The d center.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.PerpendicularVector(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Perpendiculars the vector.
            </summary>
            <param name="v">The v.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.CreateArc(System.Single,System.Int32,System.Single,System.Single)">
            <summary>
            Creates a list of vectors that represents an arc
            </summary>
            <param name="radius">The radius of the arc</param>
            <param name="sides">The number of sides to generate in the circle that this will cut out from</param>
            <param name="startingAngle">The starting angle of arc, 0 being to the east, 90 being south</param>
            <param name="degrees">The number of degrees to draw, clockwise from the starting angle</param>
            <returns>A list of vectors that, if connected, will create an arc</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.CreateArc2(System.Single,System.Int32,System.Single,System.Single)">
            <summary>
            Creates a list of vectors that represents an arc by generating points between two angles
            </summary>
            <param name="radius">The radius of the arc</param>
            <param name="sides">The number of sides the arc will have</param>
            <param name="startingAngle">The starting angle of arc, 0 being to the east, 90 being south</param>
            <param name="endingAngle">The starting angle of arc, 0 being to the east, 90 being south</param>
            <returns>A list of vectors that, if connected, will create an arc</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.CreateCircle(System.Double,System.Int32)">
            <summary>
            Creates a list of vectors that represents a circle
            </summary>
            <param name="radius">The radius of the circle</param>
            <param name="sides">The number of sides to generate</param>
            <returns>A list of vectors that, if connected, will create a circle</returns>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.CreateThePixel(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Creates the pixel.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawPoints(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Collections.Generic.List{Microsoft.Xna.Framework.Vector2},Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a list of connecting points
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            /// <param name="position">Where to position the points</param>
            <param name="points">The points to connect with lines</param>
            <param name="color">The color to use</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawPoints(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Collections.Generic.List{Microsoft.Xna.Framework.Vector2},Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws a list of connecting points
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            /// <param name="position">Where to position the points</param>
            <param name="points">The points to connect with lines</param>
            <param name="color">The color to use</param>
            <param name="color">The thickness to use</param>
            <param name="thickness">The thickness of the lines</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.FillRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a filled rectangle
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="rect">The rectangle to draw</param>
            <param name="color">The color to draw the rectangle in</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.FillRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws a filled rectangle
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="rect">The rectangle to draw</param>
            <param name="angle">The angle to draw the rectangle at</param>
            <param name="color">The color to draw the rectangle in</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.FillRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a filled rectangle
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="location">Where to draw</param>
            <param name="size">The size of the rectangle</param>
            <param name="color">The color to draw the rectangle in</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.FillRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws a filled rectangle
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="location">Where to draw</param>
            <param name="size">The size of the rectangle</param>
            <param name="angle">The angle to draw the rectangle at</param>
            <param name="color">The color to draw the rectangle in</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.FillRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a filled rectangle
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="x1">The X coord of the left side</param>
            <param name="y1">The Y coord of the upper side</param>
            <param name="x2">The X coord of the right side</param>
            <param name="y2">The Y coord of the bottom side</param>
            <param name="color">The color to draw the rectangle in</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.FillRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws a filled rectangle
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="x1">The X coord of the left side</param>
            <param name="y1">The Y coord of the upper side</param>
            <param name="x2">The X coord of the right side</param>
            <param name="y2">The Y coord of the bottom side</param>
            <param name="color">The color to draw the rectangle in</param>
            <param name="thickness">The thickness of the line</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a rectangle with the thickness provided
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="rect">The rectangle to draw</param>
            <param name="color">The color to draw the rectangle in</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws a rectangle with the thickness provided
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="rect">The rectangle to draw</param>
            <param name="color">The color to draw the rectangle in</param>
            <param name="thickness">The thickness of the lines</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,System.Single,System.Single)">
            <summary>
            Draws a rectangle with the thickness provided
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="rect">The rectangle to draw</param>
            <param name="color">The color to draw the rectangle in</param>
            <param name="thickness">The thickness of the lines</param>
            <param name="angle">The angle to draw the rectangle at, this will rotate around the top-left of the rectangle by default</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Rectangle,Microsoft.Xna.Framework.Color,System.Single,System.Single,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Draws a rectangle with the thickness provided
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="rect">The rectangle to draw</param>
            <param name="color">The color to draw the rectangle in</param>
            <param name="thickness">The thickness of the lines</param>
            <param name="angle">The angle to draw the rectangle at</param>
            <param name="rotateAround">The location to rotate the rectangle around</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a rectangle with the thickness provided
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="location">Where to draw</param>
            <param name="size">The size of the rectangle</param>
            <param name="color">The color to draw the rectangle in</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws a rectangle with the thickness provided
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="location">Where to draw</param>
            <param name="size">The size of the rectangle</param>
            <param name="color">The color to draw the rectangle in</param>
            <param name="thickness">The thickness of the line</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,System.Single)">
            <summary>
            Draws a rectangle with the thickness provided
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="location">Where to draw</param>
            <param name="size">The size of the rectangle</param>
            <param name="color">The color to draw the rectangle in</param>
            <param name="thickness">The thickness of the line</param>
            <param name="angle">The angle to draw the rectangle at, this will rotate around the top-left of the rectangle by default</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawRectangle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,System.Single,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Draws a rectangle with the thickness provided
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="location">Where to draw</param>
            <param name="size">The size of the rectangle</param>
            <param name="color">The color to draw the rectangle in</param>
            <param name="thickness">The thickness of the line</param>
            <param name="angle">The angle to draw the rectangle at</param>
            <param name="rotateAround">Rotate around this point</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawLine(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a line from point1 to point2 with an offset
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="x1">The X coord of the first point</param>
            <param name="y1">The Y coord of the first point</param>
            <param name="x2">The X coord of the second point</param>
            <param name="y2">The Y coord of the second point</param>
            <param name="color">The color to use</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawLine(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws a line from point1 to point2 with an offset
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="x1">The X coord of the first point</param>
            <param name="y1">The Y coord of the first point</param>
            <param name="x2">The X coord of the second point</param>
            <param name="y2">The Y coord of the second point</param>
            <param name="color">The color to use</param>
            <param name="thickness">The thickness of the line</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawLine(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a line from point1 to point2 with an offset
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="point1">The first point</param>
            <param name="point2">The second point</param>
            <param name="color">The color to use</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawLine(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws a line from point1 to point2 with an offset
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="point1">The first point</param>
            <param name="point2">The second point</param>
            <param name="color">The color to use</param>
            <param name="thickness">The thickness of the line</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawLine(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws a line from point1 to point2 with an offset
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="point">The starting point</param>
            <param name="length">The length of the line</param>
            <param name="angle">The angle of this line from the starting point</param>
            <param name="color">The color to use</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawLine(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws a line from point1 to point2 with an offset
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="point">The starting point</param>
            <param name="length">The length of the line</param>
            <param name="angle">The angle of this line from the starting point</param>
            <param name="color">The color to use</param>
            <param name="thickness">The thickness of the line</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.PutPixel(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,System.Single,Microsoft.Xna.Framework.Color)">
            <summary>
            Puts the pixel.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.PutPixel(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)">
            <summary>
            Puts the pixel.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="position">The position.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawCircle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Single,System.Int32,Microsoft.Xna.Framework.Color)">
            <summary>
            Draw a circle
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="center">The center of the circle</param>
            <param name="radius">The radius of the circle</param>
            <param name="sides">The number of sides to generate</param>
            <param name="color">The color of the circle</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawCircle(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Single,System.Int32,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draw a circle
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="center">The center of the circle</param>
            <param name="radius">The radius of the circle</param>
            <param name="sides">The number of sides to generate</param>
            <param name="color">The color of the circle</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawCircle(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,System.Single,System.Single,System.Int32,Microsoft.Xna.Framework.Color)">
            <summary>
            Draws the circle.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="radius">The radius.</param>
            <param name="sides">The sides.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawCircle(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Single,System.Single,System.Single,System.Int32,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draws the circle.
            </summary>
            <param name="spriteBatch">The sprite batch.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="radius">The radius.</param>
            <param name="sides">The sides.</param>
            <param name="color">The color.</param>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawArc(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Single,System.Int32,System.Single,System.Single,Microsoft.Xna.Framework.Color)">
            <summary>
            Draw a arc
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="center">The center of the arc</param>
            <param name="radius">The radius of the arc</param>
            <param name="sides">The number of sides to generate</param>
            <param name="startingAngle">The starting angle of arc, 0 being to the east, 90 being south</param>
            <param name="degrees">The number of degrees to draw, clockwise from the starting angle</param>
            <param name="color">The color of the arc</param>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.BatchPrimitives.DrawArc(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,System.Single,System.Int32,System.Single,System.Single,Microsoft.Xna.Framework.Color,System.Single)">
            <summary>
            Draw a arc
            </summary>
            <param name="spriteBatch">The destination drawing surface</param>
            <param name="center">The center of the arc</param>
            <param name="radius">The radius of the arc</param>
            <param name="sides">The number of sides to generate</param>
            <param name="startingAngle">The starting angle of arc, 0 being to the east, 90 being south</param>
            <param name="degrees">The number of degrees to draw, clockwise from the starting angle</param>
            <param name="color">The color of the arc</param>
            <param name="thickness">The thickness of the arc</param>
        </member>
        <member name="T:System.Windows.Forms.EventArgsExtensions">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:System.Windows.Forms.EventArgsExtensions.GetWorldPosition(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Gets the world position.
            </summary>
            <param name="args">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Xna.Framework.Graphics.TextureExtensions">
             <summary>
            
             </summary>
        </member>
        <member name="M:Microsoft.Xna.Framework.Graphics.TextureExtensions.PremultiplyAlpha(Microsoft.Xna.Framework.Graphics.Texture2D,System.Nullable{Microsoft.Xna.Framework.Color})">
            <summary>
            Premultiplies the alpha.
            </summary>
            <param name="texture">The texture.</param>
            <param name="colorKey">The color key.</param>
        </member>
        <member name="T:Almirante.Engine.Fonts.BitmapFont">
            <summary>
            Bitmap font class.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Fonts.BitmapFont.tempSize">
            <summary>
            A single instance to be used for calculating text size
            </summary>
        </member>
        <member name="F:Almirante.Engine.Fonts.BitmapFont.tempPos">
            <summary>
            A single instance to be used for text positioning
            </summary>
        </member>
        <member name="M:Almirante.Engine.Fonts.BitmapFont.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Fonts.BitmapFont"/> class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Fonts.BitmapFont.DrawLine(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.String)">
            <summary>
            OnDraw the input string in the scene.
            </summary>
            <param name="batch">The batch.</param>
            <param name="position">Adjusted position to start rendering</param>
            <param name="color">The color.</param>
            <param name="input">Pre-formated string line</param>
        </member>
        <member name="M:Almirante.Engine.Fonts.BitmapFont.MeasureString(System.String)">
            <summary>
            Calculate the amount of space the given string will occupy.
            </summary>
            <param name="input">The input string.</param>
            <returns>
            Vector2 containing the width and height
            </returns>
        </member>
        <member name="M:Almirante.Engine.Fonts.BitmapFont.FromFile(System.String)">
            <summary>
            Froms the file.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="P:Almirante.Engine.Fonts.BitmapFont.Characters">
            <summary>
            Dictionary where the key is a char and the value
            is the Rectangle which contains the position and size
            for that char in the Texture
            </summary>
        </member>
        <member name="P:Almirante.Engine.Fonts.BitmapFont.FontHeight">
            <summary>
            Font size
            </summary>
        </member>
        <member name="P:Almirante.Engine.Fonts.BitmapFont.HorizontalGap">
            <summary>
            Gets or sets the horizontal gap between every character
            </summary>
            <value>
            The horizontal gap.
            </value>
        </member>
        <member name="P:Almirante.Engine.Fonts.BitmapFont.VerticalGap">
            <summary>
            Gets or sets the vertical gap between every character
            </summary>
            <value>
            The vertical gap.
            </value>
        </member>
        <member name="P:Almirante.Engine.Fonts.BitmapFont.Offset">
            <summary>
            Gets or sets the offset.
            </summary>
            <value>
            The offset.
            </value>
        </member>
        <member name="P:Almirante.Engine.Fonts.BitmapFont.Texture">
            <summary>
            Texture containing all characters
            </summary>
        </member>
        <member name="P:Almirante.Engine.Fonts.BitmapFont.Color">
            <summary>
            Gets or sets the text color (default is Color.White).
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="T:Almirante.Engine.Fonts.BitmapFontAlignment">
            <summary>
            Orientation for drawing text
            </summary>
        </member>
        <member name="F:Almirante.Engine.Fonts.BitmapFontAlignment.Left">
            <summary>
            The text will be rendered from left to right to the position
            </summary>
        </member>
        <member name="F:Almirante.Engine.Fonts.BitmapFontAlignment.Center">
            <summary>
            The text will be centered at the position
            </summary>
        </member>
        <member name="F:Almirante.Engine.Fonts.BitmapFontAlignment.Right">
            <summary>
            The text will be rendered from right to left to the position
            </summary>
        </member>
        <member name="T:Almirante.Engine.Interface.Control">
            <summary>
            Interface component class.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Interface.Control.isMouseOver">
            <summary>
            Stores whether the mouse is over this control.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Interface.Control.lastMouseUp">
            <summary>
            Stores the last mouse up time.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Interface.Control.lastMouseKeyUp">
            <summary>
            Stores the last mouse up time.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Interface.Control.lastMouseUpPosition">
            <summary>
            Stores the last mouse up position.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Interface.Control.lastMousePosition">
            <summary>
            Stores the last position the mouse passed in this control.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Interface.Control.isMouseDown">
            <summary>
            Stores mouse buttons states.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Interface.Control.position">
            <summary>
            Stores the control position.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Interface.Control.size">
            <summary>
            Stores the control size.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Interface.Control.active">
            <summary>
            Stores the active state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Interface.Control"/> class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.Move(System.Single,System.Single)">
            <summary>
            Moves the control to the specified position.
            </summary>
            <param name="x">The x position.</param>
            <param name="y">The y position.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.Resize(System.Single,System.Single)">
            <summary>
            Resizes the control with the specified size.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.SetFocus(System.Boolean)">
            <summary>
            Sets the focus on the current control.
            </summary>
            <param name="value">if set to <c>true</c>, the control got focus.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.GetControlAt(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Gets the control at the specified position.
            </summary>
            <param name="position">The position.</param>
            <returns>The control found that the specified position.</returns>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnKeyDown(System.Object,Almirante.Engine.Interface.KeyboardEventArgs)">
            <summary>
            Called when [key down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Almirante.Engine.Interface.KeyboardEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnKeyUp(System.Object,Almirante.Engine.Interface.KeyboardEventArgs)">
            <summary>
            Called when [key up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Almirante.Engine.Interface.KeyboardEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnMouseClick(System.Object,Almirante.Engine.Interface.MouseEventArgs)">
            <summary>
            Called when click.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Almirante.Engine.Interface.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnMouseDoubleClick(System.Object,Almirante.Engine.Interface.MouseEventArgs)">
            <summary>
            Called when double click.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Almirante.Engine.Interface.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnMouseUp(System.Object,Almirante.Engine.Interface.MouseEventArgs)">
            <summary>
            Called when a mouse button is released.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Almirante.Engine.Interface.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnMouseDown(System.Object,Almirante.Engine.Interface.MouseEventArgs)">
            <summary>
            Called when a mouse button is pressed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnMouseLeave(System.Object,System.EventArgs)">
            <summary>
            Called when mouse leaves the control region.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnMouseEnter(System.Object,System.EventArgs)">
            <summary>
            Called when mouse enters the control region.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnMouseScroll(System.Object,Almirante.Engine.Interface.MouseEventArgs)">
            <summary>
            Called when mouse wheel is rotated.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Almirante.Engine.Interface.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnEnter(System.Object,System.EventArgs)">
            <summary>
            Called when control loses its focus.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnLeave(System.Object,System.EventArgs)">
            <summary>
            Called when control gets focused.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.IsPointInside(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Determines whether the specified point is inside the control region.
            </summary>
            <param name="point">The point.</param>
            <returns>
              <c>true</c> if [is point inside] [the specified point]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnInputKeyboardPress(Almirante.Engine.Input.Devices.KeyboardKey)">
            <summary>
            Called when a keyboard button is pressed.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnInputKeyboardRelease(Almirante.Engine.Input.Devices.KeyboardKey)">
            <summary>
            Called when a keyboard button is released.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnInputMousePress(Microsoft.Xna.Framework.Vector2,Almirante.Engine.Input.Devices.MouseKey)">
            <summary>
            Called when a mouse button is pressed.
            </summary>
            <param name="position">The position.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnInputMouseRelease(Microsoft.Xna.Framework.Vector2,Almirante.Engine.Input.Devices.MouseKey)">
            <summary>
            Called when a mouse button is released.
            </summary>
            <param name="position">The position.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnInputMouseScroll(Microsoft.Xna.Framework.Vector2,System.Int32)">
            <summary>
            Called when a mouse wheel scrolls.
            </summary>
            <param name="position">The position.</param>
            <param name="ammount">The ammount.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.IsMouseDown">
            <summary>
            Determines whether is any mouse button down.
            </summary>
            <returns>
              <c>true</c> if there's any mouse button down; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnInputMouseMove(Microsoft.Xna.Framework.Vector2)">
            <summary>
            Called when mouse moves.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.Update">
            <summary>
            Updates this instance.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Draws this HUD instance.
            </summary>
            <param name="batch">The sprite batch instance.</param>
            <param name="position">The position.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnUpdate">
            <summary>
            Called when updating the HUD component.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.Control.OnDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Called when drawing the HUD component.
            </summary>
            <param name="batch">The sprite batch instance.</param>
            <param name="position">The position.</param>
        </member>
        <member name="P:Almirante.Engine.Interface.Control.Active">
            <summary>
            Gets or sets the active state.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Interface.Control.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:Almirante.Engine.Interface.Control.RealPosition">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:Almirante.Engine.Interface.Control.Area">
            <summary>
            Gets the control's area.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Interface.Control.RealArea">
            <summary>
            Gets the real control's area.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Interface.Control.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="P:Almirante.Engine.Interface.Control.Parent">
            <summary>
            Gets the parent control.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Interface.Control.CanFocus">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Almirante.Engine.Interface.Control"/> is focusable.
            </summary>
            <value>
              <c>true</c> if focusable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Almirante.Engine.Interface.Control.HasFocus">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Almirante.Engine.Interface.Control"/> is focusable.
            </summary>
            <value>
              <c>true</c> if focusable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Almirante.Engine.Interface.Control.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Almirante.Engine.Interface.Control"/> is visible.
            </summary>
            <value>
              <c>true</c> if visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Almirante.Engine.Interface.Control.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Almirante.Engine.Interface.Control"/> is enabled.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Almirante.Engine.Interface.Control.Controls">
            <summary>
            Gets the controls.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Interface.Control.KeyDown">
            <summary>
            Occurs when a keyboard key is pressed.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Interface.Control.KeyUp">
            <summary>
            Occurs when keyboard key is released.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Interface.Control.MouseEnter">
            <summary>
            Occurs when mouse enter the control region.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Interface.Control.MouseLeave">
            <summary>
            Occurs when mouse enter the control region.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Interface.Control.MouseDown">
            <summary>
            Occurs when mouse button is pressed into the control region.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Interface.Control.MouseUp">
            <summary>
            Occurs when mouse button is released.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Interface.Control.MouseScroll">
            <summary>
            Occurs when mouse button is released.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Interface.Control.MouseClick">
            <summary>
            Occurs when mouse button is released.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Interface.Control.MouseDoubleClick">
            <summary>
            Occurs when mouse button is released.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Interface.Control.Enter">
            <summary>
            Occurs when control gets focused.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Interface.Control.Leave">
            <summary>
            Occurs when control loses its focus.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Interface.ControlCollection">
            <summary>
            Control collection class.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Interface.ControlCollection.controls">
            <summary>
            Stores a list of controls.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.ControlCollection.IndexOf(Almirante.Engine.Interface.Control)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Interface.ControlCollection.Insert(System.Int32,Almirante.Engine.Interface.Control)">
             <summary>
             Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
             </summary>
             <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
             <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
             <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
               </exception>
            
             <exception cref="T:System.NotSupportedException">
             The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
               </exception>
        </member>
        <member name="M:Almirante.Engine.Interface.ControlCollection.RemoveAt(System.Int32)">
             <summary>
             Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
             </summary>
             <param name="index">The zero-based index of the item to remove.</param>
             <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
               </exception>
            
             <exception cref="T:System.NotSupportedException">
             The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
               </exception>
        </member>
        <member name="M:Almirante.Engine.Interface.ControlCollection.Add(Almirante.Engine.Interface.Control)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
              </exception>
        </member>
        <member name="M:Almirante.Engine.Interface.ControlCollection.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
              </exception>
        </member>
        <member name="M:Almirante.Engine.Interface.ControlCollection.Contains(Almirante.Engine.Interface.Control)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Interface.ControlCollection.CopyTo(Almirante.Engine.Interface.Control[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.ControlCollection.Remove(Almirante.Engine.Interface.Control)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <exception cref="T:System.NotSupportedException">
            The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
              </exception>
        </member>
        <member name="M:Almirante.Engine.Interface.ControlCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Interface.ControlCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Interface.ControlCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Interface.ControlCollection"/> class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.ControlCollection.#ctor(Almirante.Engine.Interface.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Interface.ControlCollection"/> class.
            </summary>
            <param name="parent">The parent control.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.ControlCollection.BringToFront(Almirante.Engine.Interface.Control)">
            <summary>
            Brings to front the specified control.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.ControlCollection.SendToBack(Almirante.Engine.Interface.Control)">
            <summary>
            Brings to front the specified control.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="P:Almirante.Engine.Interface.ControlCollection.Parent">
            <summary>
            Gets or sets the parent control.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:Almirante.Engine.Interface.ControlCollection.Item(System.Int32)">
             <summary>
             Gets or sets the element at the specified index.
             </summary>
             <returns>
             The element at the specified index.
               </returns>
            
             <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.
               </exception>
            
             <exception cref="T:System.NotSupportedException">
             The property is set and the <see cref="T:System.Collections.Generic.IList`1"/> is read-only.
               </exception>
        </member>
        <member name="P:Almirante.Engine.Interface.ControlCollection.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
              </returns>
        </member>
        <member name="P:Almirante.Engine.Interface.ControlCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
              </returns>
        </member>
        <member name="T:Almirante.Engine.Interface.ControlEventArgs">
            <summary>
            Control event args class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.ControlEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Interface.ControlEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.ControlEventArgs.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Interface.ControlEventArgs"/> class.
            </summary>
            <param name="time">The time the event occurred.</param>
        </member>
        <member name="P:Almirante.Engine.Interface.ControlEventArgs.Time">
            <summary>
            Gets the time.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Interface.KeyboardEventArgs">
            <summary>
            Keyboard event arguments.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.KeyboardEventArgs.#ctor(System.Double,Almirante.Engine.Input.Devices.KeyboardKey)">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Interface.KeyboardEventArgs"/> class.
            </summary>
            <param name="time">The time.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.KeyboardEventArgs.#ctor(Almirante.Engine.Input.Devices.KeyboardKey)">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Interface.KeyboardEventArgs"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="P:Almirante.Engine.Interface.KeyboardEventArgs.Key">
            <summary>
            Gets the key.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Interface.MouseEventArgs">
            <summary>
            Mouse event args class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.MouseEventArgs.#ctor(System.Double,Almirante.Engine.Input.Devices.MouseKey,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Interface.MouseEventArgs"/> class.
            </summary>
            <param name="time">The time.</param>
            <param name="key">The key.</param>
            <param name="amount">The amount.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.MouseEventArgs.#ctor(System.Double,Almirante.Engine.Input.Devices.MouseKey)">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Interface.MouseEventArgs"/> class.
            </summary>
            <param name="time">The time.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.MouseEventArgs.#ctor(Almirante.Engine.Input.Devices.MouseKey)">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Interface.MouseEventArgs"/> class.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="P:Almirante.Engine.Interface.MouseEventArgs.Key">
            <summary>
            Gets the key.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Interface.MouseEventArgs.Scroll">
            <summary>
            Gets or sets the scroll amount.
            </summary>
            <value>
            The scroll.
            </value>
        </member>
        <member name="T:Almirante.Engine.Interface.RootControl">
            <summary>
            Root interface control.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Interface.RootControl.huds">
            <summary>
            Stores all hud objects.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.RootControl.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.RootControl.AddDisplay``1(``0)">
            <summary>
            Creates a HUD into the scene.
            </summary>
            <typeparam name="T">Type of the display.</typeparam>
            <param name="instance">The instance.</param>
            <returns>
            Same instance passed as argument.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Interface.RootControl.Update">
            <summary>
            Control update.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.RootControl.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Control draw.
            </summary>
            <param name="batch"></param>
            <param name="position"></param>
        </member>
        <member name="T:Almirante.Engine.Scenes.SceneControl">
            <summary>
            Control scenes
            </summary>
        </member>
        <member name="T:Almirante.Engine.Scenes.Scene">
            <summary>
            Screen class.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.Scene.state">
            <summary>
            Stores the current scene state.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.Scene.nextTop">
            <summary>
            Stores the next state of the top property.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.Scene.currentTop">
            <summary>
            Stores the current state of the top property.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.Scene.focus">
            <summary>
            Stores the focused control.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.Scene.input">
            <summary>
            Stores a reference to the input manager.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.Initialize">
            <summary>
            Initializes the scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.SetInputEvents">
            <summary>
            Sets the input events.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.ClearInputEvents">
            <summary>
            Clears the input events.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.Uninitialize">
            <summary>
            Initializes the scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.Activate">
            <summary>
            Initializes the scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.Deactivate">
            <summary>
            Initializes the scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.Pause">
            <summary>
            Pauses the current scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.Resume">
            <summary>
            Resumes the current scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.Hide">
            <summary>
            Hides the current scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.Show">
            <summary>
            Shows the current scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.SetTransitioning">
            <summary>
            Sets the transitioning state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.ClearTransitioning">
            <summary>
            Removes the transitioning state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.Focus(Almirante.Engine.Interface.Control)">
            <summary>
            Focuses the specified control.
            </summary>
            <param name="control">The control to focus on.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnInputKeyboardPressed(Almirante.Engine.Input.Devices.KeyboardKey)">
            <summary>
            Listens for keyboard button press.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnInputKeyboardReleased(Almirante.Engine.Input.Devices.KeyboardKey)">
            <summary>
            Listens for keyboard button release.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnInputMouseMoved(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Listens for mouse movement.
            </summary>
            <param name="position">New position.</param>
            <param name="worldPosition">New world position.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnInputMousePressed(Almirante.Engine.Input.Devices.MouseKey)">
            <summary>
            Listens for mouse button press events.
            </summary>
            <param name="key">Pressed key.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnInputMouseReleased(Almirante.Engine.Input.Devices.MouseKey)">
            <summary>
            Listens for mouse button release events.
            </summary>
            <param name="key">Released key.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnInputMouseScroll(System.Int32)">
            <summary>
            Listens for mouse scroll events.
            </summary>
            <param name="ammount">Ammount scrolled.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.Update">
            <summary>
            Updates the current scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Draws the current scene.
            </summary>
            <param name="batch">The batch.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.Enter">
            <summary>
            Enters the current scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.Leave">
            <summary>
            Leaves the current scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnInitialize">
            <summary>
            Initializes the scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnUninitialize">
            <summary>
            Uninitializes the scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnUpdate">
            <summary>
            Screen logic update function.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Screen graphic drawing function.
            </summary>
            <param name="batch">The batch instance.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnPause">
            <summary>
            When the scene gets paused.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnResume">
            <summary>
            When scene gets resumed.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnHide">
            <summary>
            When scene gets hidden.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnShow">
            <summary>
            When scene is shown.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnEnter">
            <summary>
            When entering the scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnLeave">
            <summary>
            When leaving the scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnActivate">
            <summary>
            When entering the scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnDeactivate">
            <summary>
            When leaving the scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Scene.OnResize">
            <summary>
            When game gets resized.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Scenes.Scene.Interface">
            <summary>
            Stores the container (root) control.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Scenes.Scene.Active">
            <summary>
            Gets a value indicating whether the current scene in on to.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Scenes.Scene.Visible">
            <summary>
            Gets a value indicating whether the scene is visible or not.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Scenes.Scene.Paused">
            <summary>
            Gets a value indicating whether the scene is paused or not.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Scenes.Scene.Transitioning">
            <summary>
            Gets a value indicating whether the scene is paused or not.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Scenes.SceneControl"/> class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.Activate">
            <summary>
            Initializes the scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.Deactivate">
            <summary>
            Initializes the scene.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.OnPreviewKeyDown(System.Object,System.Windows.Forms.PreviewKeyDownEventArgs)">
            <summary>
            Called when [preview key down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.OnKeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Called when [key up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.OnKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Called when [key press].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyPressEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Called when [key down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.KeyEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.OnMouseCaptureChanged(System.Object,System.EventArgs)">
            <summary>
            Called when [mouse capture changed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.OnMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when [mouse wheel].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when [mouse up].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when [mouse move].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.OnMouseLeave(System.Object,System.EventArgs)">
            <summary>
            Called when [mouse leave].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.OnMouseHover(System.Object,System.EventArgs)">
            <summary>
            Called when [mouse hover].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.OnMouseEnter(System.Object,System.EventArgs)">
            <summary>
            Called when [mouse enter].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when [mouse down].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.OnMouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when [mouse double click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneControl.OnMouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Called when [mouse click].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Almirante.Engine.Scenes.SceneControl.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:Almirante.Engine.Scenes.SceneControl.BackgroundColor">
            <summary>
            Gets or sets the color of the clear.
            </summary>
            <value>
            The color of the clear.
            </value>
        </member>
        <member name="T:Almirante.Engine.Scenes.Transition">
            <summary>
            Scene transition class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transition.Initialize">
            <summary>
            Initializes the transition resources.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transition.OnInitialize">
            <summary>
            Initializes the transition resources.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transition.Uninitialize">
            <summary>
            Uninitializes the transition resources.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transition.OnUninitialize">
            <summary>
            Uninitializes the transition resources.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transition.Start">
            <summary>
            Starts the transition.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transition.OnStart">
            <summary>
            Starts the transition state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transition.Complete">
            <summary>
            Completes the transition.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transition.OnComplete">
            <summary>
            Completes the transition state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transition.Update(System.Single)">
            <summary>
            Updates the transition.
            </summary>
            <param name="progress">Transition progress (ranges from 0.0f to 1.0f)</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transition.OnUpdate(System.Single)">
            <summary>
            Updates the transition state.
            </summary>
            <param name="progress">Transition progress (ranges from 0.0f to 1.0f)</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transition.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Draws the transition.
            </summary>
            <param name="batch">Sprite batch.</param>
            <param name="bottom">The bottom.</param>
            <param name="top">The top.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transition.OnDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Draws the transition state.
            </summary>
            <param name="batch">Sprite batch.</param>
            <param name="bottom">The bottom.</param>
            <param name="top">The top.</param>
        </member>
        <member name="T:Almirante.Engine.Scenes.TransitionAttribute">
            <summary>
            Transition register attribute.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.TransitionAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name">Transition's unique name.</param>
        </member>
        <member name="P:Almirante.Engine.Scenes.TransitionAttribute.Name">
            <summary>
            Transition name.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Scenes.Transitions.FadeInTransition">
            <summary>
            Scene transition.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.Transitions.FadeInTransition.Name">
            <summary>
            Transition name.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.Transitions.FadeInTransition.colorIn">
            <summary>
            Stores the fade alpha color.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transitions.FadeInTransition.OnInitialize">
            <summary>
            Initializes the resources.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transitions.FadeInTransition.OnUpdate(System.Single)">
            <summary>
            Updates the fade effect.
            </summary>
            <param name="progress">Transition progress.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transitions.FadeInTransition.OnDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Draws the transition
            </summary>
            <param name="batch">Sprite batch.</param>
            <param name="bottom">The bottom.</param>
            <param name="top">The top.</param>
        </member>
        <member name="T:Almirante.Engine.Scenes.Transitions.FadeOutTransition">
            <summary>
            Scene transition.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.Transitions.FadeOutTransition.Name">
            <summary>
            Transition name.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.Transitions.FadeOutTransition.colorOut">
            <summary>
            Stores the fade alpha color.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transitions.FadeOutTransition.OnInitialize">
            <summary>
            Initializes the resources.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transitions.FadeOutTransition.OnUpdate(System.Single)">
            <summary>
            Updates the fade effect.
            </summary>
            <param name="progress">Transition progress.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.Transitions.FadeOutTransition.OnDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D)">
            <summary>
            Draws the transition
            </summary>
            <param name="batch">SpriteBatch instance.</param>
            <param name="bottom">The pre-rendered scenes.</param>
            <param name="top">The scene that is coming.</param>
        </member>
        <member name="T:Almirante.Engine.Scenes.TransitionType">
            <summary>
            Scene transition type.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.TransitionType.None">
            <summary>
            There's no transition occurring
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.TransitionType.Switch">
            <summary>
            There's a switch between two screens occurring
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.TransitionType.Push">
            <summary>
            There's a scene being added to the top of the stack
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.TransitionType.Pop">
            <summary>
            There's a scene being removed from the top of the stack
            </summary>
        </member>
        <member name="T:System.IO.DirectoryExtensions">
            <summary>
            Directory extensions.
            </summary>
        </member>
        <member name="M:System.IO.DirectoryExtensions.EnsureExists(System.IO.DirectoryInfo)">
            <summary>
            Ensures the exists.
            </summary>
            <param name="dirInfo">The dir info.</param>
        </member>
        <member name="T:Almirante.Engine.Input.Devices.GamepadButton">
            <summary>
            Keyboard device key.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Input.InputKey">
            <summary>
            Input key class.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.InputKey.timePressed">
            <summary>
            Stores the time when the user pressed the button.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.InputKey.timeReleased">
            <summary>
            Stores the time when the user released the button.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Input.InputKey.Update(System.Boolean)">
            <summary>
            Updates the current input.
            </summary>
            <param name="down">Indicates whether the current input is down.</param>
        </member>
        <member name="P:Almirante.Engine.Input.InputKey.Pressed">
            <summary>
            Gets whether the user has just pressed the input or not.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.InputKey.Down">
            <summary>
            Gets whether the user is holding the input down or not.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.InputKey.Released">
            <summary>
            Gets a value indicating whether the user has just released the input or not.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.InputKey.HoldTime">
            <summary>
            Gets how much time the user is holding the input down.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Input.Devices.GamepadButton.#ctor(Microsoft.Xna.Framework.Input.Buttons)">
            <summary>
            Creates a new instance of the <see cref="T:Almirante.Engine.Input.Devices.GamepadButton"/> class.
            </summary>
            <param name="button">Current key index.</param>
        </member>
        <member name="M:Almirante.Engine.Input.Devices.GamepadButton.op_Implicit(Almirante.Engine.Input.Devices.GamepadButton)~System.Boolean">
            <summary>
            Performs an implicit conversion from <see cref="T:Almirante.Engine.Input.Devices.GamepadButton"/> to <see cref="T:System.Boolean"/>.
            </summary>
            <param name="button">The button.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.GamepadButton.Button">
            <summary>
            Gets the related game pad button.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Input.Devices.GamepadDevice">
            <summary>
            Gamepad
            </summary>
        </member>
        <member name="T:Almirante.Engine.Input.IInputDevice">
            <summary>
            Input device interface.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Input.IInputDevice.Update">
            <summary>
            Updates the device.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.GamepadDevice.leftThumbThreshold">
            <summary>
            Stores the left thumbstick threshold.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.GamepadDevice.rightThumbThreshold">
            <summary>
            Stores the right thumbstick threshold.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.GamepadDevice.leftTriggerThreshold">
            <summary>
            Stores the left trigger threshold.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.GamepadDevice.rightTriggerThreshold">
            <summary>
            Stores the right trigger threshold.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.GamepadDevice.vibrationLeft">
            <summary>
            Stores the left vibration.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.GamepadDevice.vibrationRight">
            <summary>
            Stores the right vibration.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.GamepadDevice.buttons">
            <summary>
            Stores all keyboard device keys.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.GamepadDevice.state">
            <summary>
            Stores the current keyboard state.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.GamepadDevice.lastState">
            <summary>
            Stores the current keyboard state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Input.Devices.GamepadDevice.#ctor(Microsoft.Xna.Framework.PlayerIndex)">
            <summary>
            Creates a new instance of the <see cref="T:Almirante.Engine.Input.Devices.GamepadDevice"/> class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Input.Devices.GamepadDevice.Update">
            <summary>
            Update the keyboard keys state
            </summary>
        </member>
        <member name="M:Almirante.Engine.Input.Devices.GamepadDevice.UpdateButton(Microsoft.Xna.Framework.Input.Buttons,System.Boolean)">
            <summary>
            Update the state of the given button
            </summary>
            <param name="button">The button which will be evaluated</param>
            <param name="pressed">true if the button is pressed</param>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.GamepadDevice.PlayerIndex">
            <summary>
            The player index related to this gamepad <see cref="P:Almirante.Engine.Input.Devices.GamepadDevice.PlayerIndex"/>
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.GamepadDevice.LeftThumbstick">
            <summary>
            Get a Vector2 for the position of the left thumbstick
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.GamepadDevice.RightThumbstick">
            <summary>
            Get a Vector2 for the position of the right thumbstick
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.GamepadDevice.LeftTrigger">
            <summary>
            Get the value for the left trigger position
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.GamepadDevice.RightTrigger">
            <summary>
            Get the value for the right trigger position
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.GamepadDevice.LeftThumbstickThreshold">
            <summary>
            Get or set the safe value for the left thumbstick, ranging from 0.0 to 1.0
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.GamepadDevice.RightThumbstickThreshold">
            <summary>
            Get or set the safe value for the right thumbstick, ranging from 0.0 to 1.0
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.GamepadDevice.LeftTriggerThreshold">
            <summary>
            Get or set the safe value for the left trigger, ranging from 0.0 to 1.0
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.GamepadDevice.RightTriggerThreshold">
            <summary>
            Get or set the safe value for the right trigger, ranging from 0.0 to 1.0
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.GamepadDevice.VibrationLeft">
            <summary>
            Set the vibration value for the left motor, ranging from 0.0 to 1.0
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.GamepadDevice.VibrationRight">
            <summary>
            Set the vibration value for the right motor, ranging from 0.0 to 1.0
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.GamepadDevice.IsConnected">
            <summary>
            Gets a value indicating whether this instance is connected.
            </summary>
            <value>
            <c>true</c> if this instance is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="E:Almirante.Engine.Input.Devices.GamepadDevice.Connected">
            <summary>
            Occurs when the device connects.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Input.Devices.GamepadDevice.Disconnected">
            <summary>
            Occurs when the device disconnects.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Input.Devices.GamepadDevice.Pressed">
            <summary>
            Occurs when a button is pressed.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Input.Devices.GamepadDevice.Released">
            <summary>
            Occurs when a button is released.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.GamepadDevice.Item(Microsoft.Xna.Framework.Input.Buttons)">
            <summary>
            Gets the key state for the specified keyboard key.
            </summary>
            <param name="key">Requested key.</param>
            <returns>State of the requested key.</returns>
        </member>
        <member name="T:Almirante.Engine.Input.Devices.GamepadDevice.GamepadEvent">
            <summary>
            Gamepad event delegate.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="T:Almirante.Engine.Input.Devices.GamepadDevice.GamepadButtonEvent">
            <summary>
            Gamepad event delegate.
            </summary>
            <param name="sender">The sender.</param>
            <param name="button">The button</param>
        </member>
        <member name="T:Almirante.Engine.Input.Devices.MouseKey">
            <summary>
            Mouse keys.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Input.Devices.MouseKey.#ctor(Almirante.Engine.Input.Devices.MouseButton)">
            <summary>
            Creates a new instance of the <see cref="T:Almirante.Engine.Input.Devices.MouseKey"/> class.
            </summary>
            <param name="key">Current key index.</param>
        </member>
        <member name="M:Almirante.Engine.Input.Devices.MouseKey.op_Implicit(Almirante.Engine.Input.Devices.MouseKey)~System.Boolean">
            <summary>
            Performs an implicit conversion from <see cref="T:Almirante.Engine.Input.Devices.MouseKey"/> to <see cref="T:System.Boolean"/>.
            </summary>
            <param name="key">The key.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.MouseKey.Key">
            <summary>
            Gets the related mouse key index.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Input.Devices.MouseDevice">
            <summary>
            Mouse input device.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.MouseDevice.keys">
            <summary>
            Stores all keyboard device keys.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.MouseDevice.state">
            <summary>
            Stores the current keyboard state.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.MouseDevice.lastState">
            <summary>
            Stores the current keyboard state.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.MouseDevice.currentPosition">
            <summary>
            Stores the current mouse position.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Input.Devices.MouseDevice.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Almirante.Engine.Input.Devices.KeyboardDevice"/> class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Input.Devices.MouseDevice.Update">
            <summary>
            Update the keyboard keys state
            </summary>
        </member>
        <member name="E:Almirante.Engine.Input.Devices.MouseDevice.Pressed">
            <summary>
            Key press event.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Input.Devices.MouseDevice.Released">
            <summary>
            Key press event.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Input.Devices.MouseDevice.Moved">
            <summary>
            Mouse moved event.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Input.Devices.MouseDevice.Scroll">
            <summary>
            Mouse moved event.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.MouseDevice.Position">
            <summary>
            Gets or sets the mouse position.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.MouseDevice.WorldPosition">
            <summary>
            Gets or sets the mouse position.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.MouseDevice.Dislocation">
            <summary>
              Gets or sets the actual dislocation speed of the mouse cursor within this window
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.MouseDevice.ScrollTotal">
            <summary>
            Gets the accumulated mouse scroll.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.MouseDevice.ScrollValue">
            <summary>
            Gets the accumulated mouse scroll.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.MouseDevice.Item(Almirante.Engine.Input.Devices.MouseButton)">
            <summary>
            Gets the key state for the specified mouse key.
            </summary>
            <param name="key">Requested key.</param>
            <returns>State of the requested key.</returns>
        </member>
        <member name="T:Almirante.Engine.Input.Devices.MouseDevice.MouseKeyEvent">
            <summary>
            Mouse key event delegate.
            </summary>
            <param name="key">Key event</param>
        </member>
        <member name="T:Almirante.Engine.Input.Devices.MouseDevice.MouseMovedEvent">
            <summary>
            Mouse move event delegate.
            </summary>
            <param name="position">Current mouse position.</param>
            <param name="worldPosition">Current mouse position relative to the world (camera).</param>
        </member>
        <member name="T:Almirante.Engine.Input.Devices.MouseDevice.MouseScrollEvent">
            <summary>
            Mouse scroll event delegate.
            </summary>
            <param name="ammount">Scroll ammount.</param>
        </member>
        <member name="T:Almirante.Engine.Input.Devices.MouseButton">
            <summary>
            Supported mouse keys.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.MouseButton.Left">
            <summary>
            Left mouse button.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.MouseButton.Middle">
            <summary>
            Middle mouse button.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.MouseButton.Right">
            <summary>
            Right mouse button.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.MouseButton.XButton1">
            <summary>
            Additional button 1.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.MouseButton.XButton2">
            <summary>
            Additional button 2
            </summary>
        </member>
        <member name="T:Almirante.Engine.Input.Devices.KeyboardDevice">
            <summary>
            Class that hold the states of a keyboard
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.KeyboardDevice.keys">
            <summary>
            Stores all keyboard device keys.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.Devices.KeyboardDevice.state">
            <summary>
            Stores the current keyboard state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Input.Devices.KeyboardDevice.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Almirante.Engine.Input.Devices.KeyboardDevice"/> class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Input.Devices.KeyboardDevice.Update">
            <summary>
            Update the keyboard keys state
            </summary>
        </member>
        <member name="E:Almirante.Engine.Input.Devices.KeyboardDevice.Pressed">
            <summary>
            Key press event.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Input.Devices.KeyboardDevice.Released">
            <summary>
            Key press event.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.KeyboardDevice.Item(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Gets the key state for the specified keyboard key.
            </summary>
            <param name="key">Requested key.</param>
            <returns>State of the requested key.</returns>
        </member>
        <member name="T:Almirante.Engine.Input.Devices.KeyboardDevice.KeyboardEvent">
            <summary>
            Keyboard event delegate.
            </summary>
            <param name="key">Key.</param>
        </member>
        <member name="T:Almirante.Engine.Input.Devices.KeyboardDevice.KeyboardMessageEvent">
            <summary>
            Keyboard message event delegate.
            </summary>
            <param name="msg">Message data.</param>
        </member>
        <member name="T:Almirante.Engine.Input.Devices.KeyboardKey">
            <summary>
            Keyboard device key.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Input.Devices.KeyboardKey.#ctor(Microsoft.Xna.Framework.Input.Keys)">
            <summary>
            Creates a new instance of the <see cref="T:Almirante.Engine.Input.Devices.KeyboardKey"/> class.
            </summary>
            <param name="key">Current key index.</param>
        </member>
        <member name="M:Almirante.Engine.Input.Devices.KeyboardKey.op_Implicit(Almirante.Engine.Input.Devices.KeyboardKey)~System.Boolean">
            <summary>
            Performs an implicit conversion from <see cref="T:Almirante.Engine.Input.Devices.KeyboardKey"/> to <see cref="T:System.Boolean"/>.
            </summary>
            <param name="key">The key.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="P:Almirante.Engine.Input.Devices.KeyboardKey.Key">
            <summary>
            Gets the related keyboard key index.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Interface.Display">
            <summary>
            Game HUD (Heads Up Display) class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.Display.Initialize">
            <summary>
            Initializes this HUD instance.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.Display.OnInitialize">
            <summary>
            Called when initializing the HUD component.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.Display.Update">
            <summary>
            Updates this instance.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.Display.OnUpdate">
            <summary>
            Called when updating the HUD component.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Interface.Display.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Draws this HUD instance.
            </summary>
            <param name="batch">The sprite batch instance.</param>
        </member>
        <member name="M:Almirante.Engine.Interface.Display.OnDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Called when drawing the HUD component.
            </summary>
            <param name="batch">The sprite batch instance.</param>
        </member>
        <member name="P:Almirante.Engine.Interface.Display.Position">
            <summary>
            Gets or sets the position of the component.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:Almirante.Engine.Interface.Display.Size">
            <summary>
            Gets or sets the size of the component.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="P:Almirante.Engine.Interface.Display.Parent">
            <summary>
            Gets the parent scene.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Interface.Display.Visible">
            <summary>
            Gets the parent scene.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Resources.Resource`1">
            <summary>
            Resource holder.
            </summary>
            <typeparam name="T">Type of the resource.</typeparam>
        </member>
        <member name="F:Almirante.Engine.Resources.Resource`1.manager">
            <summary>
            Stores a reference to the resource manager.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Resources.Resource`1.disposed">
            <summary>
            Stores if the current resource has been disposed.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Resources.Resource`1.#ctor(Almirante.Engine.Resources.ResourceManager,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Almirante.Engine.Resources.Resource`1"/> class.
            </summary>
            <param name="manager">The manager.</param>
            <param name="path">The path.</param>
        </member>
        <member name="M:Almirante.Engine.Resources.Resource`1.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Almirante.Engine.Resources.Resource`1"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Resources.Resource`1.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Almirante.Engine.Resources.Resource`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Resources.Resource`1.OnChange(System.Boolean,System.Object,`0)">
            <summary>
            Dispatches the loaded event.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Resources.Resource`1.Change">
            <summary>
            Resource loaded event.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Resources.Resource`1.Content">
            <summary>
            Gets the current content.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Resources.Resource`1.Path">
            <summary>
            Gets the current content path.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Resources.Resource`1.Loaded">
            <summary>
            Gets a value indicating whether the resource is loaded.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Resources.Resource`1.ResourceChanged">
            <summary>
            Resource changed callback.
            </summary>
            <param name="sender">The sender.</param>
            <param name="tag">User object.</param>
        </member>
        <member name="T:Almirante.Engine.Resources.ResourceTracker">
            <summary>
            Tracks the resource references.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Resources.ResourceTracker.Count">
            <summary>
            Gets or sets the reference count for the current object.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Resources.ResourceTracker.Content">
            <summary>
            Gets or sets the object content.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Scenes.StartupAttribute">
            <summary>
            Auto scene registering attribute.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Scenes.SceneManager">
            <summary>
            Screen manager.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.SceneManager.screens">
            <summary>
            Stores a list of registered screens.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.SceneManager.transitions">
            <summary>
            List of current transitions.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.SceneManager.current">
            <summary>
            List of current activated screens.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.SceneManager.nextScene">
            <summary>
            Next scene.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.SceneManager.transition">
            <summary>
            Current transition effect.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.SceneManager.transitionType">
            <summary>
            Current transition type.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.SceneManager.transitionTween">
            <summary>
            Transition tweener.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.SceneManager.renderTarget">
            <summary>
            Previous scene target.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.SceneManager.renderTargetNext">
            <summary>
            Previous scene target.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Almirante.Engine.Scenes.SceneManager"/> class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.Register``1(System.Boolean)">
            <summary>
            Registers a scene into the manager.
            </summary>
            <typeparam name="T">Type of the scene</typeparam>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.Register(System.Type,System.Boolean)">
            <summary>
            Registers a scene into the manager.
            </summary>
            <param name="type">Type of the scene.</param>
            <param name="startup">Is it the startup scene?</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.RegisterTransition``1(System.String)">
            <summary>
            Registers a scene into the manager.
            </summary>
            <typeparam name="T">Type of the scene</typeparam>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.RegisterTransition(System.Type,System.String)">
            <summary>
            Registers a transition into the manager.
            </summary>
            <param name="type">Type of the transition.</param>
            <param name="name">The name.</param>
            <exception cref="T:System.Exception">Duplicated transition names</exception>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.SetupTransition(Almirante.Engine.Scenes.Scene,Almirante.Engine.Scenes.TransitionType,System.String,System.Single)">
            <summary>
            Setups the transition.
            </summary>
            <param name="next">The next.</param>
            <param name="type">The type.</param>
            <param name="name">The name.</param>
            <param name="time">The time.</param>
            <exception cref="T:System.Exception">
            Cannot pop the only scene on the stack.
            or
            Invalid transition name:  + name
            </exception>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.TransitionSwitchComplete">
            <summary>
            Transitions the switch complete.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.TransitionPushComplete">
            <summary>
            Transitions the push complete.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.TransitionPopComplete">
            <summary>
            Transitions the pop complete.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.Get``1">
            <summary>
            Gets a scene instance by its type.
            </summary>
            <typeparam name="T">Type of the scene.</typeparam>
            <returns>Screen instance</returns>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.Set(System.Type)">
            <summary>
            Switches the current scene to a new one.
            </summary>
            <param name="type">The type.</param>
            <exception cref="T:System.Exception">Screen type not registered:  + type.FullName</exception>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.Switch``1(System.String,System.Single)">
            <summary>
            Switches the current scene to a new one.
            </summary>
            <typeparam name="T">Type of the scene.</typeparam>
            <param name="transition">The transition name.</param>
            <param name="time">The time to occur the transition.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.Push``1(System.String,System.Single)">
            <summary>
            Pushes a scene on top of another.
            </summary>
            <typeparam name="T">Type of the scene.</typeparam>
            <param name="transition">The transition name.</param>
            <param name="time">The time to occur the transition.</param>
            <exception cref="T:System.InvalidOperationException">Cannot push a scene that is already on the stack.</exception>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.Pop(System.String,System.Single)">
            <summary>
            Pops the top scene from the scene manager.
            </summary>
            <param name="transition">The transition name.</param>
            <param name="time">The time to occur the transition.</param>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.Initialize">
            <summary>
            Initializes the scene manager.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.Start">
            <summary>
            Initializes the scene manager.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.Uninitialize">
            <summary>
            Initializes the scene manager.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.Update">
            <summary>
            Updates the active scenes.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch)">
            <summary>
            Draws the active screens.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.SceneManager.disposed">
            <summary>
            The disposed
            </summary>
        </member>
        <member name="M:Almirante.Engine.Scenes.SceneManager.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Almirante.Engine.Input.InputManager">
            <summary>
            Input management class.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Input.InputManager.devices">
            <summary>
            Stores the list of registered device list.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Input.InputManager.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Almirante.Engine.Input.InputManager"/> class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Input.InputManager.GetController(Microsoft.Xna.Framework.PlayerIndex)">
            <summary>
            Get the specified GamepadDevice or create a new one if possible
            </summary>
            <param name="index">The index of the controller.</param>
            <returns>
            A GamepadDevice instance or null if the controller could not be created
            </returns>
        </member>
        <member name="M:Almirante.Engine.Input.InputManager.Update">
            <summary>
            Update all available devices
            </summary>
        </member>
        <member name="M:Almirante.Engine.Input.InputManager.Update(System.IntPtr)">
            <summary>
            Update all available devices
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.InputManager.Keyboard">
            <summary>
            Gets the keyboard device.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.InputManager.Mouse">
            <summary>
            Gets the mouse device.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Input.InputManager.Gamepads">
            <summary>
            Gets the gamepad devices.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Resources.ResourceContentManager">
            <summary>
            Content management.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Resources.ResourceContentManager.resources">
            <summary>
            Stores all loaded resources.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceContentManager.#ctor(System.IServiceProvider)">
            <summary>
            Creates a new instance of the <see cref="T:Almirante.Engine.Resources.ResourceContentManager"/> class.
            </summary>
            <param name="serviceProvider">Service provider.</param>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceContentManager.#ctor(System.IServiceProvider,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Almirante.Engine.Resources.ResourceContentManager"/> class.
            </summary>
            <param name="serviceProvider">Service provider.</param>
            <param name="rootDirectory">Root content directory.</param>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceContentManager.IsLoaded(System.String)">
            <summary>
            Check whether the specified asset is loaded.
            </summary>
            <param name="assetPath">Path to the asset.</param>
            <returns>Value indicating whether the requested asset is loaded.</returns>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceContentManager.Load``1(System.String)">
            <summary>
            Requests a resource to the content manager.
            </summary>
            <typeparam name="T">Type of the resource.</typeparam>
            <param name="resourcePath">The resource path.</param>
            <returns>
            The loaded resource.
            </returns>
            <exception cref="T:System.Exception">Trying to load the same asset with different types.</exception>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceContentManager.Unload(System.String)">
            <summary>
            Unloads a single asset from the content manager.
            </summary>
            <param name="resourcePath">The resource path.</param>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceContentManager.Unload">
            <summary>
            Unloads all loaded resources and disposes them when possible.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceContentManager.Normalize(System.String)">
            <summary>
            Noramlizes the path to the specified resource.
            </summary>
            <param name="resourcePath">Resource path.</param>
            <returns>Normalized path.</returns>
        </member>
        <member name="T:Almirante.Engine.Resources.ResourceManager">
            <summary>
            Resource management.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Resources.ResourceManager.contents">
            <summary>
            Stores a reference to the content manager.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Resources.ResourceManager.font">
            <summary>
            Stores the default font.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Resources.ResourceManager.background">
            <summary>
            Stores the default texture.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceManager.#ctor(Almirante.Engine.Resources.ResourceContentManager)">
            <summary>
            Creates a new instance of the <see cref="T:Almirante.Engine.Resources.ResourceManager"/> class.
            </summary>
            <param name="contents"></param>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceManager.CreateTexture(System.Int32,System.Int32,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a texture.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="color">The color.</param>
            <returns>Newly created texture.</returns>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceManager.LoadTexture(System.String,System.Nullable{Microsoft.Xna.Framework.Color})">
            <summary>
            Loads a raw texture from the disk.
            </summary>
            <param name="file">The file path.</param>
            <param name="colorKey">The color key. Used only in winforms control.</param>
            <returns>
            Texture instance.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceManager.LoadAsync``1(System.String)">
            <summary>
            Loads a resource asynchronously.
            </summary>
            <typeparam name="T">Type of the resource.</typeparam>
            <param name="path">Path to the resource.</param>
            <returns>
            Resource tracker.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceManager.LoadAsync``1(System.String,Almirante.Engine.Resources.ResourceManager.LoadResult{``0})">
            <summary>
            Loads a resource asynchronously.
            </summary>
            <typeparam name="T">Type of the resource.</typeparam>
            <param name="path">Path to the resource.</param>
            <param name="change">The change.</param>
            <returns>
            Resource tracker.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceManager.LoadAsync``1(System.String,System.Object)">
            <summary>
            Loads a resource asynchronously.
            </summary>
            <typeparam name="T">Type of the resource.</typeparam>
            <param name="path">Path to the resource.</param>
            <param name="tag">User object.</param>
            <returns>
            Resource tracker.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceManager.LoadAsync``1(System.String,System.Object,Almirante.Engine.Resources.ResourceManager.LoadResult{``0})">
            <summary>
            Loads a resource asynchronously.
            </summary>
            <typeparam name="T">Type of the resource.</typeparam>
            <param name="path">Path to the resource.</param>
            <param name="tag">The tag.</param>
            <param name="change">The change.</param>
            <returns>
            Resource tracker.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceManager.LoadSync``1(System.String)">
            <summary>
            Requests a new resource to the resource manager.
            </summary>
            <typeparam name="T">Type of the resource.</typeparam>
            <param name="path">The path.</param>
            <returns>
            Resource tracker
            </returns>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceManager.Load``1(System.String,System.Object,Almirante.Engine.Resources.ResourceManager.LoadResult{``0},System.Boolean)">
            <summary>
            Loads a resource asynchronously.
            </summary>
            <typeparam name="T">Type of the resource to load.</typeparam>
            <param name="path">Path to the resource.</param>
            <param name="tag">The tag (can be anything).</param>
            <param name="change">The event callback.</param>
            <param name="async">If set to <c>true</c> the load will occur asynchronously.</param>
            <returns>
            Resource tracker.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceManager.Unload(System.String)">
            <summary>
            Requests the content manager to unload a asset.
            </summary>
            <param name="path">Path to the resource that must be unloaded.</param>
        </member>
        <member name="F:Almirante.Engine.Resources.ResourceManager.disposed">
            <summary>
            The disposed
            </summary>
        </member>
        <member name="M:Almirante.Engine.Resources.ResourceManager.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Almirante.Engine.Resources.ResourceManager.DefaultFont">
            <summary>
            Gets the default spritefont.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Resources.ResourceManager.DefaultBackground">
            <summary>
            Gets the default texture.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Resources.ResourceManager.IsLoading">
            <summary>
            Gets a value indicating whether the manager is loading contents.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Resources.ResourceManager.PendingResources">
            <summary>
            Gets how many resource are pending to load.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Resources.ResourceManager.Delay">
            <summary>
            Gets or sets a delay for each asset being loaded in milliseconds.
            Useful for debugging load screens.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Resources.ResourceManager.LoadResult`1">
            <summary>
            Resource load result.
            </summary>
            <typeparam name="T">Type of resource.</typeparam>
            <param name="resource">The resource instance.</param>
            <param name="success">if set to <c>true</c> the resource loaded successfully.</param>
            <param name="tag">The tag object.</param>
        </member>
        <member name="T:Almirante.Engine.Core.TimeManager">
            <summary>
            Game time management.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.TimeManager.fpsUpdate">
            <summary>
            Stores the last time the FPS was updated.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.TimeManager.fpsAccumulator">
            <summary>
            Stores the total ammount of time spent in updates.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Core.TimeManager.fpsUpdates">
            <summary>
            Stores how many times the update functions was called in a second.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.TimeManager.Initialize">
            <summary>
            Initializes the game timer.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.TimeManager.Update(Microsoft.Xna.Framework.GameTime)">
            <summary>
            Updates the game time management.
            </summary>
            <param name="time">Elapsed time.</param>
        </member>
        <member name="P:Almirante.Engine.Core.TimeManager.Total">
            <summary>
            Gets the time since the application startup.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.TimeManager.TotalScaled">
            <summary>
            Gets the time since the application startup.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.TimeManager.Frame">
            <summary>
            Gets the elapsed frame time.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.TimeManager.FrameScaled">
            <summary>
            Gets the elapsed frame time.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.TimeManager.Scale">
            <summary>
            Global time scale.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.TimeManager.Fps">
            <summary>
            Gets the fps
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.TimeManager.IntervaledFps">
            <summary>
            Gets the fps
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.TimeManager.GameTime">
            <summary>
              Gets the GameTime of the current frame
            </summary>
        </member>
        <member name="T:Almirante.Engine.Scenes.SceneState">
            <summary>
            Scene state.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.SceneState.Default">
            <summary>
            The default state
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.SceneState.Paused">
            <summary>
            The paused state
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.SceneState.Hidden">
            <summary>
            The hidden state
            </summary>
        </member>
        <member name="F:Almirante.Engine.Scenes.SceneState.Transitioning">
            <summary>
            The transitioning state
            </summary>
        </member>
        <member name="T:Almirante.Engine.Core.Settings">
            <summary>
            Settings class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Settings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Core.Settings"/> class.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.Settings.Resolution">
            <summary>
            Gets the resolution.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.Settings.WindowTitle">
            <summary>
            Gets or sets the window title string.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Core.Settings.VerticalSync">
            <summary>
            Gets or sets a value indicating whether vertical sync is on.
            </summary>
            <value>
              <c>true</c> if vertical sync is on; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.Settings.IsCursorVisible">
            <summary>
            Gets or sets a value indicating whether the mouse is visible.
            </summary>
            <value>
            	<c>true</c> if this instance is mouse visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Almirante.Engine.Core.Settings.UseFixedTimestep">
            <summary>
            Gets or sets a value indicating whether to use fixed timestep.
            </summary>
            <value>
              <c>true</c> if fixed timestep is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Almirante.Engine.Core.Bootstrapper">
            <summary>
            Bootstrap class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Bootstrapper.Execute(System.String[])">
            <summary>
            Configures this instance.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Core.Bootstrapper.OnStartup(System.String[])">
            <summary>
            Setups all game settings.
            </summary>
            <param name="arguments">The arguments.</param>
            <returns>The type of the startup class or null for default one.</returns>
        </member>
        <member name="M:Almirante.Engine.Core.Bootstrapper.OnConfigure(Almirante.Engine.Core.Settings)">
            <summary>
            Setups all game settings.
            </summary>
            <param name="settings">The settings instance.</param>
        </member>
        <member name="T:Almirante.Engine.Tweens.ColorTweener">
            <summary>
            Tweener class.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ColorTweener.start">
            <summary>
            Stores the initial value.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ColorTweener.finish">
            <summary>
            Stores the final value.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ColorTweener.finished">
            <summary>
            Stores if the current tweener has finished.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ColorTweener.tween">
            <summary>
            Stores the current tween function.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ColorTweener.data">
            <summary>
            User object data.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ColorTweener.running">
            <summary>
            Stores a value indicating whether the current tweener is running or not.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ColorTweener.value">
            <summary>
            Stores the current tween value.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ColorTweener.rTweener">
            <summary>
            Tweener for red color.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ColorTweener.gTweener">
            <summary>
            Tweener for green color.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ColorTweener.bTweener">
            <summary>
            Tweener for blue color.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ColorTweener.aTweener">
            <summary>
            Tweener for alpha channel.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.#ctor(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)">
            <summary>
            Creates a new <see cref="T:Almirante.Engine.Tweens.ColorTweener"/> class instance.
            </summary>
            <param name="start">Initial value</param>
            <param name="finish">Final value</param>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.#ctor(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Object)">
            <summary>
            Creates a new <see cref="T:Almirante.Engine.Tweens.ColorTweener"/> class instance.
            </summary>
            <param name="start">Initial value</param>
            <param name="finish">Final value</param>
            <param name="data">User data</param>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.#ctor(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color,System.Object,Almirante.Engine.Tweens.MotionTweens.TweenFunction)">
            <summary>
            Creates a new <see cref="T:Almirante.Engine.Tweens.ColorTweener"/> class instance.
            </summary>
            <param name="start">Initial value</param>
            <param name="finish">Final value</param>
            <param name="tween">Easing function</param>
            <param name="data">User data</param>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.GetDataValue``1">
            <summary>
            Gets the user-defined data.
            </summary>
            <typeparam name="T">Data type.</typeparam>
            <returns>User-defined data.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.GetValue``1">
            <summary>
            Gets the user-defined data.
            </summary>
            <typeparam name="T">Data type.</typeparam>
            <returns>User-defined data.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.Forward(System.Single)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">State duration time in seconds.</param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.Forward(System.Single,Almirante.Engine.Tweens.MotionTweens.TweenFunction)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">State duration time in seconds.</param>
            <param name="tween">Tween function for this state.</param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.Backward(System.Single)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">State duration time in seconds.</param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.Backward(System.Single,Almirante.Engine.Tweens.MotionTweens.TweenFunction)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">State duration time in seconds.</param>
            <param name="tween">Tween function for this state.</param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.Wait(System.Single)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">The duration.</param>
            <returns>
            Current tweener instance for fluent configuration.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.Action(System.Action)">
            <summary>
            Creates an event callback.
            </summary>
            <param name="act">Action callback.</param>
            <returns>
            Current tweener instance for fluent configuration.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.Repeat(System.Int32)">
            <summary>
            Creates a repeat state.
            </summary>
            <param name="count">
            Repetition count. <br/>
            count &lt; 0: repeat forever.<br/>
            count &gt; 0: number of times to repeat.<br/>
            count = 0: ignored.
            </param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.Reset">
            <summary>
            Resets all the states.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.Start">
            <summary>
            Starts the tweener.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.Stop">
            <summary>
            Stops the tweener.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.Pause">
            <summary>
            Pauses the tweener.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.Resume">
            <summary>
            Resumes the tweener.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.Restart">
            <summary>
            Restarts the tweener.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.Update(System.Double)">
            <summary>
            Updates the current tween.
            </summary>
            <param name="time">Elapsed time in seconds.</param>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.Update(System.Single)">
            <summary>
            Updates the current tween.
            </summary>
            <param name="time">Elapsed time in seconds.</param>
        </member>
        <member name="M:Almirante.Engine.Tweens.ColorTweener.CreateTweens">
            <summary>
            Creates all motion tweens.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Tweens.ColorTweener.ValueChanged">
            <summary>
            Event used to dispatch tweener events.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Tweens.ColorTweener.Value">
            <summary>
            Gets the current tweener value.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Tweens.ColorTweener.IsFinished">
            <summary>
            Gets whether the current tween has finished.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Tweens.ColorTweener.ColorTweenerValueChanged">
            <summary>
            Delegate used to dispatch callbacks when a tweener value changes.
            </summary>
            <param name="sender">Tweener instance.</param>
            <param name="data">The data.</param>
        </member>
        <member name="T:Almirante.Engine.Tweens.ColorTweener.ColorTweenerFinished">
            <summary>
            Delegate used to dispatch callbacks when a tweener state changes.
            </summary>
            <param name="sender">Tweener instance.</param>
        </member>
        <member name="T:Almirante.Engine.Tweens.States.ActionState">
            <summary>
            Action callback state.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Tweens.States.IState">
            <summary>
            Tweener state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.IState.Enter">
            <summary>
            Activates the current state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.IState.Leave">
            <summary>
            Leaves the current state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.IState.Reset">
            <summary>
            Resets the current state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.IState.Update(Almirante.Engine.Tweens.ValueTweener,System.Single)">
            <summary>
            Updates the current state.
            </summary>
            <param name="tweener">Current tweener instance.</param>
            <param name="time">Elapsed time since last frame in seconds.</param>
            <returns>True if the state has been cleared.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.ActionState.#ctor">
            <summary>
            Creates a new <see cref="T:Almirante.Engine.Tweens.States.ActionState"/> instance.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.ActionState.Enter">
            <summary>
            Activates the current state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.ActionState.Leave">
            <summary>
            Leaves the current state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.ActionState.Reset">
            <summary>
            Resets the current state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.ActionState.Update(Almirante.Engine.Tweens.ValueTweener,System.Single)">
            <summary>
            Updates the current state.
            </summary>
            <param name="tweener">Current tweener instance.</param>
            <param name="time">Elapsed time since last frame in seconds.</param>
            <returns>
            True if the state has been cleared.
            </returns>
        </member>
        <member name="P:Almirante.Engine.Tweens.States.ActionState.Action">
            <summary>
            Gets the current number of repetitions.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Tweens.States.MoveState">
            <summary>
            Forward motion tween state.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.States.MoveState.elapsed">
            <summary>
            Stores the elapsed time.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.MoveState.#ctor">
            <summary>
            Creates a new <see cref="T:Almirante.Engine.Tweens.States.MoveState"/> instance.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.MoveState.Enter">
            <summary>
            Activates the current state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.MoveState.Leave">
            <summary>
            Leaves the current state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.MoveState.Reset">
            <summary>
            Resets the current state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.MoveState.Update(Almirante.Engine.Tweens.ValueTweener,System.Single)">
            <summary>
            Updates the current state.
            </summary>
            <param name="tweener">Current tweener instance.</param>
            <param name="time">Elapsed time since last frame in seconds.</param>
            <returns>
            True if the state has been cleared.
            </returns>
        </member>
        <member name="P:Almirante.Engine.Tweens.States.MoveState.Start">
            <summary>
            Gets the start value.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Tweens.States.MoveState.Finish">
            <summary>
            Gets the final value.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Tweens.States.MoveState.Duration">
            <summary>
            Gets the current state duration in seconds.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Tweens.States.MoveState.Tween">
            <summary>
            Gets the tween function.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Tweens.States.WaitState">
            <summary>
            Wait motion tween state.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.States.WaitState.elapsed">
            <summary>
            Stores the elapsed time.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.WaitState.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Tweens.States.WaitState"/> class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.WaitState.Enter">
            <summary>
            Activates the current state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.WaitState.Leave">
            <summary>
            Leaves the current state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.WaitState.Reset">
            <summary>
            Resets the current state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.WaitState.Update(Almirante.Engine.Tweens.ValueTweener,System.Single)">
            <summary>
            Updates the current state.
            </summary>
            <param name="tweener">Current tweener instance.</param>
            <param name="time">Elapsed time since last frame in seconds.</param>
            <returns>
            True if the state has been cleared.
            </returns>
        </member>
        <member name="P:Almirante.Engine.Tweens.States.WaitState.Duration">
            <summary>
            Gets the current state duration in seconds.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Tweens.States.RepeatState">
            <summary>
            Repeat motion tween state.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.States.RepeatState.saveCount">
            <summary>
            Stores the number of repetitions.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.States.RepeatState.count">
            <summary>
            Current number of repetitions.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.RepeatState.#ctor">
            <summary>
            Creates a new <see cref="T:Almirante.Engine.Tweens.States.RepeatState"/> instance.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.RepeatState.Enter">
            <summary>
            Activates the current state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.RepeatState.Leave">
            <summary>
            Leaves the current state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.RepeatState.Reset">
            <summary>
            Resets the current state.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.States.RepeatState.Update(Almirante.Engine.Tweens.ValueTweener,System.Single)">
            <summary>
            Updates the current state.
            </summary>
            <param name="tweener">Current tweener instance.</param>
            <param name="time">Elapsed time since last frame in seconds.</param>
            <returns>
            True if the state has been cleared.
            </returns>
        </member>
        <member name="P:Almirante.Engine.Tweens.States.RepeatState.Count">
            <summary>
            Gets the current number of repetitions.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Tweens.MotionTweens">
            <summary>
            Tween method class.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.BackIn(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            BackIn tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.BackOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            BackOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.BackInOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            BackInOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.BounceOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            BounceOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.BounceIn(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            BounceIn tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.BounceInOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            BounceInOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.Linear(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Linear tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.CircularIn(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            CircularIn tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.CircularOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            CircularOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.CircularInOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            CircularInOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.CubicIn(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            CubicIn tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.CubicOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            CubicOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.CubicInOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            CubicInOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.ElasticIn(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            ElasticIn tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.ElasticOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            ElasticOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.ElasticInOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            ElasticInOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.ExponentialIn(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            ExponentialIn tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.ExponentialOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            ExponentialOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.ExponentialInOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            ExponentialInOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.QuadraticIn(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            QuadraticIn tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.QuadraticOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            QuadraticOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.QuadraticInOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            QuadraticInOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.QuarticIn(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            QuarticIn tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.QuarticOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            QuarticOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.QuarticInOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            QuarticInOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.QuinticIn(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            QuinticIn tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.QuinticOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            QuinticOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.QuinticInOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            QuinticInOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.SinusoidalIn(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            SinusoidalIn tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.SinusoidalOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            SinusoidalOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.MotionTweens.SinusoidalInOut(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            SinusoidalInOut tweener.
            </summary>
            <param name="t">Time</param>
            <param name="b">Begin</param>
            <param name="c">Change</param>
            <param name="d">Duration</param>
            <returns>New position</returns>
        </member>
        <member name="T:Almirante.Engine.Tweens.MotionTweens.TweenFunction">
            <summary>
            Easing function delegate.
            </summary>
            <param name="time">Time</param>
            <param name="start">Begin</param>
            <param name="change">Changes</param>
            <param name="duration">Duration</param>
            <returns>Modified value</returns>
        </member>
        <member name="T:Almirante.Engine.Tweens.ValueTweener">
            <summary>
            Tweener class.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ValueTweener.states">
            <summary>
            Stores the states.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ValueTweener.currentState">
            <summary>
            Stores the current state.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ValueTweener.start">
            <summary>
            Stores the initial value.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ValueTweener.finish">
            <summary>
            Stores the final value.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ValueTweener.tween">
            <summary>
            Stores the current tween function.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ValueTweener.data">
            <summary>
            User object data.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ValueTweener.running">
            <summary>
            Stores a value that indicates whether the tweener is running or not.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ValueTweener.value">
            <summary>
            Stores the current tween value.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.ValueTweener.finished">
            <summary>
            Stores if the current tweener has finished.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.#ctor(System.Single,System.Single)">
            <summary>
            Creates a new <see cref="T:Almirante.Engine.Tweens.ValueTweener"/> class instance.
            </summary>
            <param name="start">Initial value</param>
            <param name="finish">Final value</param>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.#ctor(System.Single,System.Single,System.Object)">
            <summary>
            Creates a new <see cref="T:Almirante.Engine.Tweens.ValueTweener"/> class instance.
            </summary>
            <param name="start">Initial value</param>
            <param name="finish">Final value</param>
            <param name="data">User data</param>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.#ctor(System.Single,System.Single,System.Object,Almirante.Engine.Tweens.MotionTweens.TweenFunction)">
            <summary>
            Creates a new <see cref="T:Almirante.Engine.Tweens.ValueTweener"/> class instance.
            </summary>
            <param name="start">Initial value</param>
            <param name="finish">Final value</param>
            <param name="tween">Easing function</param>
            <param name="data">User data</param>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.GetDataValue``1">
            <summary>
            Gets the user-defined data.
            </summary>
            <typeparam name="T">Data type.</typeparam>
            <returns>User-defined data.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.GetValue``1">
            <summary>
            Gets the user-defined data.
            </summary>
            <typeparam name="T">Data type.</typeparam>
            <returns>User-defined data.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.Forward(System.Single)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">State duration time in seconds.</param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.Forward(System.Single,Almirante.Engine.Tweens.MotionTweens.TweenFunction)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">State duration time in seconds.</param>
            <param name="tween">Tween function for this state.</param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.Backward(System.Single)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">State duration time in seconds.</param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.Backward(System.Single,Almirante.Engine.Tweens.MotionTweens.TweenFunction)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">State duration time in seconds.</param>
            <param name="tween">Tween function for this state.</param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.Wait(System.Single)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">The duration.</param>
            <returns>
            Current tweener instance for fluent configuration.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.Action(System.Action)">
            <summary>
            Creates an event callback.
            </summary>
            <param name="act">
            Action callback.
            </param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.Repeat(System.Int32)">
            <summary>
            Creates a repeat state.
            </summary>
            <param name="count">
            Repetition count. <br/>
            count &lt; 0: repeat forever.<br/>
            count &gt; 0: number of times to repeat.<br/>
            count = 0: ignored.
            </param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.Reset">
            <summary>
            Resets all the states.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.Start">
            <summary>
            Starts the tweener.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.Stop">
            <summary>
            Stops the tweener.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.Pause">
            <summary>
            Pauses the tweener.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.Resume">
            <summary>
            Resumes the tweener.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.Restart">
            <summary>
            Restarts the tweener.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.Update(System.Double)">
            <summary>
            Updates the current tween.
            </summary>
            <param name="time">Elapsed time in seconds.</param>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.Update(System.Single)">
            <summary>
            Updates the current tween.
            </summary>
            <param name="time">Elapsed time in seconds.</param>
        </member>
        <member name="M:Almirante.Engine.Tweens.ValueTweener.RegisterState(Almirante.Engine.Tweens.States.IState)">
            <summary>
            Registers a new tween state.
            </summary>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="E:Almirante.Engine.Tweens.ValueTweener.ValueChanged">
            <summary>
            Event used to dispatch tweener events.
            </summary>
        </member>
        <member name="E:Almirante.Engine.Tweens.ValueTweener.Finished">
            <summary>
            Event used to dispatch tweener events.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Tweens.ValueTweener.Value">
            <summary>
            Gets the current tweener value.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Tweens.ValueTweener.IsFinished">
            <summary>
            Gets whether the current tween has finished.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Tweens.ValueTweener.TweenerFinished">
            <summary>
            Delegate used to dispatch callbacks when a tweener state changes.
            </summary>
            <param name="sender">Tweener instance.</param>
        </member>
        <member name="T:Almirante.Engine.Tweens.ValueTweener.TweenerValueChanged">
            <summary>
            Delegate used to dispatch callbacks when a tweener value changes.
            </summary>
            <param name="sender">Tweener instance.</param>
            <param name="data">The data.</param>
        </member>
        <member name="T:Almirante.Engine.Tweens.VectorTweener">
            <summary>
            Tweener class.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.VectorTweener.finished">
            <summary>
            Stores if the current tweener has finished.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.VectorTweener.tween">
            <summary>
            Stores the current tween function.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.VectorTweener.data">
            <summary>
            User object data.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.VectorTweener.xTweener">
            <summary>
            Tweener for x axis.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.VectorTweener.yTweener">
            <summary>
            Tweener for y axis.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.VectorTweener.running">
            <summary>
            Stores a value indicating whether the tweener is running or not.
            </summary>
        </member>
        <member name="F:Almirante.Engine.Tweens.VectorTweener.value">
            <summary>
            Stores the current tween value.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)">
            <summary>
            Initializes a new instance of the <see cref="T:Almirante.Engine.Tweens.ValueTweener"/> class.
            </summary>
            <param name="start">Initial value</param>
            <param name="finish">Final value</param>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Object)">
            <summary>
            Creates a new <see cref="T:Almirante.Engine.Tweens.ValueTweener"/> class instance.
            </summary>
            <param name="start">Initial value</param>
            <param name="finish">Final value</param>
            <param name="data">User data</param>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Object,Almirante.Engine.Tweens.MotionTweens.TweenFunction)">
            <summary>
            Creates a new <see cref="T:Almirante.Engine.Tweens.ValueTweener"/> class instance.
            </summary>
            <param name="start">Initial value</param>
            <param name="finish">Final value</param>
            <param name="tween">Easing function</param>
            <param name="data">User data</param>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.GetDataValue``1">
            <summary>
            Gets the user-defined data.
            </summary>
            <typeparam name="T">Data type.</typeparam>
            <returns>User-defined data.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.GetValue``1">
            <summary>
            Gets the user-defined data.
            </summary>
            <typeparam name="T">Data type.</typeparam>
            <returns>User-defined data.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Forward(System.Single)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">State duration time in seconds.</param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Forward(System.Single,Almirante.Engine.Tweens.MotionTweens.TweenFunction)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">State duration time in seconds.</param>
            <param name="tween">Tween function for this state.</param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Forward(System.Single,Almirante.Engine.Tweens.MotionTweens.TweenFunction,Almirante.Engine.Tweens.MotionTweens.TweenFunction)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">State duration time in seconds.</param>
            <param name="tweenx">Tween function for this state (x axis).</param>
            <param name="tweeny">Tween function for this state (y axis).</param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Backward(System.Single)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">State duration time in seconds.</param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Backward(System.Single,Almirante.Engine.Tweens.MotionTweens.TweenFunction)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">State duration time in seconds.</param>
            <param name="tween">Tween function for this state.</param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Backward(System.Single,Almirante.Engine.Tweens.MotionTweens.TweenFunction,Almirante.Engine.Tweens.MotionTweens.TweenFunction)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">State duration time in seconds.</param>
            <param name="tweenx">Tween function for this state (x axis).</param>
            <param name="tweeny">Tween function for this state (y axis).</param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Wait(System.Single)">
            <summary>
            Creates a forward movement state.
            </summary>
            <param name="duration">The duration.</param>
            <returns>
            Current tweener instance for fluent configuration.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Action(System.Action)">
            <summary>
            Creates an event callback.
            </summary>
            <param name="act">Action callback.</param>
            <returns>
            Current tweener instance for fluent configuration.
            </returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Repeat(System.Int32)">
            <summary>
            Creates a repeat state.
            </summary>
            <param name="count">
            Repetition count. <br/>
            count &lt; 0: repeat forever.<br/>
            count &gt; 0: number of times to repeat.<br/>
            count = 0: ignored.
            </param>
            <returns>Current tweener instance for fluent configuration.</returns>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Reset">
            <summary>
            Resets all the states.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Start">
            <summary>
            Starts the tweener.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Stop">
            <summary>
            Stops the tweener.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Pause">
            <summary>
            Pauses the tweener.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Resume">
            <summary>
            Resumes the tweener.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Restart">
            <summary>
            Restarts the tweener.
            </summary>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Update(System.Double)">
            <summary>
            Updates the current tween.
            </summary>
            <param name="time">Elapsed time in seconds.</param>
        </member>
        <member name="M:Almirante.Engine.Tweens.VectorTweener.Update(System.Single)">
            <summary>
            Updates the current tween.
            </summary>
            <param name="time">Elapsed time in seconds.</param>
        </member>
        <member name="E:Almirante.Engine.Tweens.VectorTweener.ValueChanged">
            <summary>
            Event used to dispatch tweener events.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Tweens.VectorTweener.Value">
            <summary>
            Gets the current tweener value.
            </summary>
        </member>
        <member name="P:Almirante.Engine.Tweens.VectorTweener.IsFinished">
            <summary>
            Gets whether the current tween has finished.
            </summary>
        </member>
        <member name="T:Almirante.Engine.Tweens.VectorTweener.VectorTweenerValueChanged">
            <summary>
            Delegate used to dispatch callbacks when a tweener value changes.
            </summary>
            <param name="sender">Tweener instance.</param>
            <param name="data">The data.</param>
        </member>
        <member name="T:Almirante.Engine.Tweens.VectorTweener.VectorTweenerFinished">
            <summary>
            Delegate used to dispatch callbacks when a tweener state changes.
            </summary>
            <param name="sender">Tweener instance.</param>
        </member>
    </members>
</doc>
